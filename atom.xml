<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FinLab 量化實驗室</title>
  
  <subtitle>回測與選股教學部落格</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.finlab.tw/"/>
  <updated>2018-12-13T16:58:30.429Z</updated>
  <id>https://www.finlab.tw/</id>
  
  <author>
    <name>koreal6803</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ROE怎麼看?機器學習告訴你</title>
    <link href="https://www.finlab.tw/ROE%E6%80%8E%E9%BA%BC%E7%9C%8B-%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92%E5%91%8A%E8%A8%B4%E4%BD%A0/"/>
    <id>https://www.finlab.tw/ROE怎麼看-機器學習告訴你/</id>
    <published>2018-12-11T15:49:55.000Z</published>
    <updated>2018-12-13T16:58:30.429Z</updated>
    
    <content type="html"><![CDATA[<p>機器學習究竟能不能輔助人類買賣股票？答案一定是可以的，我們可以藉由機器學習歸納出結果，來優化我們的選股方式，今天這篇文章沒有非常高深的數學，也沒有困難的程式，只會有做完研究的心得，幫助大家選股更順利！<br><a id="more"></a></p><center><img src="/ROE怎麼看-機器學習告訴你/thumbnail.png" title="SVM教你怎麼選股"></center><p>這篇文章中，我把市值跟ROE拿來做比較，並且利用SVM來訓練判斷，<br>看看市值跟ROE對於股價漲跌的關連</p><h3 id="什麼是SVM？"><a href="#什麼是SVM？" class="headerlink" title="什麼是SVM？"></a>什麼是SVM？</h3><p>SVM的全名叫做 <a href="https://en.wikipedia.org/wiki/Support_vector_machine" rel="external nofollow noopener noreferrer" target="_blank">Support Vector Machine</a>，而這類的機器學習，會用 hyperplane 將空間切開，進而將空間中的座標進行分類，所以當我們有2個features時，就可以將第一個feature當作 x 軸，第二個 feature 當作 y 軸，然後顏色代表漲跌，畫出一張圖：</p><center><img src="/ROE怎麼看-機器學習告訴你/svm.png" title="svm的簡單範例"></center><p>其中的綠色點，就是代表下跌的股票，而紅色的點，則代表了上漲的股票，而hyperplane 就是黃色的時線，將這個平面上畫出精準的一刀，切成兩個部分，右半部份，代表SVM覺得未來會上漲，左半部份代表SVM覺得未來會下跌的股票。</p><p>以上是由視覺的方式來說明SVM，數學的部分，其實大家國中高中都有學過，其實就是點與 hyperplane 的長度，SVM會計算「點到線」之間的長度，來決定誤差。當有越多點歸類錯誤的時候，SVM就會將這些「點到線的距離加總」，當作是錯誤總分，越大越不好，於是演算法不斷的移動這個切割線（hyperplane），來達到最完美的狀態，使得錯誤總分最低。</p><h3 id="SVM-的-Kernel-Trick"><a href="#SVM-的-Kernel-Trick" class="headerlink" title="SVM 的 Kernel Trick"></a>SVM 的 Kernel Trick</h3><p>我們上述的都是一條直線的 hyperplane ，但其實它不一定得是直的，只要能夠切分出不同的區域來分類即可。下圖就是使用linear的kernel跟曲線的kernel的範例：</p><center><img src="/ROE怎麼看-機器學習告訴你/kernel.png" title="不同的kernel結果也不一樣"></center><p>接下來，我們就來使用不同的kernel，來將股票做歸類，看它們究竟會上漲還是下跌？<br>我們所使用的 features 只有：<br>ROE、市值<br>方便我們以圖形化的方式呈現並理解，以下是結果</p><h3 id="使用線性的kernel"><a href="#使用線性的kernel" class="headerlink" title="使用線性的kernel"></a>使用線性的kernel</h3><p>此時 hyperplane 就是很簡單的一條線。雖然是簡單的一條線，但它還是非常有用處，我們可以藉由這條線的斜率，來瞭解 ROE 跟市值的關係：</p><center><img src="/ROE怎麼看-機器學習告訴你/linear.png" title="linearKernel成果"></center><p>程式自動最佳化後，上圖就是程式找到一刀最完美的切法，<br>這邊的市值跟ROE都已經經過preprocessing，所以跟我們平常看到的數值不太一樣，<br>我們由上圖可以看出程式在想什麼：</p><h4 id="機器學習：市值越高的股票，ROE也要越高"><a href="#機器學習：市值越高的股票，ROE也要越高" class="headerlink" title="機器學習：市值越高的股票，ROE也要越高"></a>機器學習：市值越高的股票，ROE也要越高</h4><p>可以看到上圖中，斜率是正的，代表當市值越高時，SVM 會傾向於選擇 ROE 高一點的股票，而且此條線偏上方，代表ROE比較高比較好，所以我們可以做一些歸納；</p><h4 id="假如有一檔股票「市值高，但是ROE低」，不會被選進來"><a href="#假如有一檔股票「市值高，但是ROE低」，不會被選進來" class="headerlink" title="假如有一檔股票「市值高，但是ROE低」，不會被選進來"></a>假如有一檔股票「市值高，但是ROE低」，不會被選進來</h4><p>這樣的想法算滿合理的，因為大家對市值高的股票期望比較高，或是公司的規模比較大，但此公司坐擁資源竟然還沒辦法為股東賺錢，於是期望可能轉換為失望，所以SVM表示看跌。</p><p>當然這個理由是我自己加的，SVM 是無情的最佳化結果而已。<br>另外我們也可以看到：</p><h4 id="對於「市值低，ROE低」的公司，SVM會比較寬容"><a href="#對於「市值低，ROE低」的公司，SVM會比較寬容" class="headerlink" title="對於「市值低，ROE低」的公司，SVM會比較寬容"></a>對於「市值低，ROE低」的公司，SVM會比較寬容</h4><p>一檔「市值低，ROE低」的公司，SVM會比較寬容一些些（但還是有一定的門檻）只是不如市值高的公司那麼嚴苛罷了。</p><p>我們來看一下以此種邏輯回測的結果，紅色為預測會漲的股票，綠色為預測會跌的股票，每季獲利的平均</p><center><img src="/ROE怎麼看-機器學習告訴你/eq1.png" title="回測結果"></center><p>效果很不錯<br>但是這個邏輯是否是完美的呢？<br>我們再來使用不同的kernel，試試看</p><h3 id="使用曲線的kernel"><a href="#使用曲線的kernel" class="headerlink" title="使用曲線的kernel"></a>使用曲線的kernel</h3><p>下圖為使用不同的kernel，所做出來的分類結果，我們使用2次多項式來對股票進行分類</p><center><img src="/ROE怎麼看-機器學習告訴你/poly.png" title="回測結果"></center><p>怎麼分出來完全不一樣呀！我們來看第二個實驗，SVM又告訴了我們什麼：</p><h4 id="市值高的股票-ROE-不要太高"><a href="#市值高的股票-ROE-不要太高" class="headerlink" title="市值高的股票 ROE 不要太高"></a>市值高的股票 ROE 不要太高</h4><p>這其實還是有些道理的，ROE 太高的股票不要買，這個是很多實驗都有做出來的結果，因為大公司的獲利，好歹也是龐大而穩定的系統，ROE高是會有上限的，不可能一直成長，當今天ROE已經很高時，代表接下來不會更高了，甚至還有可能會衰退。</p><p>所以買市值高的股票時，SVM傾向「 ROE 不要太高」</p><h4 id="市值低的股票-ROE-越高越好"><a href="#市值低的股票-ROE-越高越好" class="headerlink" title="市值低的股票 ROE 越高越好"></a>市值低的股票 ROE 越高越好</h4><p>然而本實驗的另一個特點，就是SVM統計出來，發現市值低的股票ROE高是沒有關係的，至於原因可能是因為，市值低的股票，大家對於該公司期望並不高，在此狀況下，高 ROE 的數值跌破大家的眼鏡，所以造成長期的後市看好。（只是推測）</p><p>所以買市值低的股票時，SVM傾向「ROE 盡量高一點」 </p><h4 id="市值中間的股票，不要買"><a href="#市值中間的股票，不要買" class="headerlink" title="市值中間的股票，不要買"></a>市值中間的股票，不要買</h4><p>這個條件是最詭異的一個，我還是不要亂解釋好了XDD。</p><h3 id="回測結果"><a href="#回測結果" class="headerlink" title="回測結果"></a>回測結果</h3><p>這樣的邏輯可以獲利嗎？我們可以看以下的結果，紅色為預測會漲的股票，綠色為預測會跌的股票，每季獲利的平均：</p><center><img src="/ROE怎麼看-機器學習告訴你/eq2.png" title="回測結果"></center><p>也是有不錯的獲利！<br>利用 SVM 來分辨漲跌的股票，真的還滿有趣的，本文利用了兩種不同的 kernel：</p><ul><li>linear</li><li>polynomial<br>來進行分類，結果顯示 linear 的分類，跑出來的回測獲利比較優秀，但由這兩種不同的kernel，製作出來的模型，都可以拿來獲利。</li></ul><p>雖然兩個模型的闡述「相互矛盾」「有點道理、但又有點詭異」<br>就像是投資界眾說紛紜的理論一樣，<br>所以以後看到相互矛盾的論點，<br>其實不一定誰好誰壞，甚至說不定都能夠獲利，<br>這就是股票市場的有趣之處。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;機器學習究竟能不能輔助人類買賣股票？答案一定是可以的，我們可以藉由機器學習歸納出結果，來優化我們的選股方式，今天這篇文章沒有非常高深的數學，也沒有困難的程式，只會有做完研究的心得，幫助大家選股更順利！&lt;br&gt;
    
    </summary>
    
      <category term="AI看股票" scheme="https://www.finlab.tw/categories/AI%E7%9C%8B%E8%82%A1%E7%A5%A8/"/>
    
    
      <category term="機器學習" scheme="https://www.finlab.tw/tags/%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92/"/>
    
      <category term="Machine Learning" scheme="https://www.finlab.tw/tags/Machine-Learning/"/>
    
      <category term="程式交易" scheme="https://www.finlab.tw/tags/%E7%A8%8B%E5%BC%8F%E4%BA%A4%E6%98%93/"/>
    
  </entry>
  
  <entry>
    <title>用Machine learning 學習看技術指標</title>
    <link href="https://www.finlab.tw/Machine-learning%EF%BC%9A%E4%BD%BF%E7%94%A8%E6%8A%80%E8%A1%93%E6%8C%87%E6%A8%99%E9%A0%90%E6%B8%AC%E5%A4%A7%E7%9B%A4/"/>
    <id>https://www.finlab.tw/Machine-learning：使用技術指標預測大盤/</id>
    <published>2018-12-04T22:58:25.000Z</published>
    <updated>2018-12-06T08:40:59.583Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.sciencedirect.com/science/article/pii/S0957417414004473" rel="external nofollow noopener noreferrer" target="_blank">這篇文章是印度指數預測</a>，2015年發表的就能有191個citation，算是很有名的paper之一，全文特點是只使用了技術指標，來預測大盤每天漲跌，提出了一個有效的優化方式。</p><center><img src="/Machine-learning：使用技術指標預測大盤/thumbnail.png" title="技術指標機器學習"></center><p>這篇paper的作者非常的認真，總共訓練四種不同的模型：Artificial Neural Network (ANN), support vector machine (SVM), random forest (RF) 和 Naive-Bayes (NB)。</p><p>這邊假如看不懂沒有關係，可以想像「模型」就是「電腦的大腦」，負責學習每種指標怎麼對應到未來的漲跌。之後有空或有時間在來慢慢介紹這些不同的「大腦」背後的數學原理。</p><p>此論文主要建構製作兩組traning data：</p><ul><li>包含十種技術指標</li><li>為這十種技術指標的看漲看跌<br>前者為 float （被normalize成-1～1）<br>而後者為 boolean （也就是只有輸入True和False）。</li></ul><p>究竟這些排列組合會迸出什麼樣的火花呢？</p><h3 id="選擇模型"><a href="#選擇模型" class="headerlink" title="選擇模型"></a>選擇模型</h3><p>研究發現Random Forest的表現是最好的，而ANN差了一點，<br>這是滿正常的，畢竟data set還是太小，神經網路很難訓練的非常好。<br>至於傳統的NB則是最差的。</p><p>其實也可以考慮一下LSTM，說不定效果也不錯？<br>（但因為LSTM還是基於ANN，所以有可能遇到traning set太小的問題）</p><h3 id="選擇traning-data"><a href="#選擇traning-data" class="headerlink" title="選擇traning data"></a>選擇traning data</h3><p>如同上面所述，此篇論文總共先用了十種技術指標，以下是這十種常見的指標，為了讓文章不會太冗長，我就不一一解釋了，之後有空再來介紹每種指標的用法。</p><center><img src="/Machine-learning：使用技術指標預測大盤/p1.png" title="十種技術指標"></center><p>￼<br>這篇paper會將這些技術指標的數值，每一項做normalize在-1～1之間，這樣的優化主要是為了ANN。以下是這個model的架構：</p><center><img src="/Machine-learning：使用技術指標預測大盤/p2.png" title="最初的架構"></center><p>￼<br>另外，全文的特點是使用了提出了 「Trend Deterministic Data Preparation」，看起來非常的厲害，簡單講就是將這些指標的數值究竟是「看漲」還是「看跌」拿來訓練，而不是續練指標本身的數值。</p><p>例如均線好了，與其拿均線的值來訓練，不如看「股價跟均線的關係」，假如股價在均線之上，就是「看漲」（True），反之則「看跌」（False）。其他指標都能以此類推！</p><p>以下就是新增了一層資料的修改的架構：</p><p><center><img src="/Machine-learning：使用技術指標預測大盤/p3.png" title="優化後的架構"></center><br>￼</p><p>最後發現使用了「Trend Deterministic Data Preparation」<br>效果好很多！</p><h3 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h3><p>這篇文章中，可以大概知道每一種model對於技術性指標的數據的效果如何。並且了解了用「Trend Deterministic Data Preparation」來進行優化。經過了非常多參數的比對，發現使用RF model做出來的策略效果最好。然而這只限於頻率為「天」的股價，假如頻率不是「天」，則可能會不一樣～。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.sciencedirect.com/science/article/pii/S0957417414004473&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;
      
    
    </summary>
    
      <category term="AI看股票" scheme="https://www.finlab.tw/categories/AI%E7%9C%8B%E8%82%A1%E7%A5%A8/"/>
    
    
      <category term="機器學習" scheme="https://www.finlab.tw/tags/%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92/"/>
    
      <category term="Machine Learning" scheme="https://www.finlab.tw/tags/Machine-Learning/"/>
    
      <category term="程式交易" scheme="https://www.finlab.tw/tags/%E7%A8%8B%E5%BC%8F%E4%BA%A4%E6%98%93/"/>
    
  </entry>
  
  <entry>
    <title>機器學習-總體經濟</title>
    <link href="https://www.finlab.tw/%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92-%E7%B8%BD%E9%AB%94%E7%B6%93%E6%BF%9F/"/>
    <id>https://www.finlab.tw/機器學習-總體經濟/</id>
    <published>2018-11-27T15:53:00.000Z</published>
    <updated>2018-11-29T17:06:44.861Z</updated>
    
    <content type="html"><![CDATA[<p>今天<a href="https://pdfs.semanticscholar.org/b68e/8d2f4d2c709bb5919b82effcb6a7bbd3db37.pdf" rel="external nofollow noopener noreferrer" target="_blank">這篇paper</a>是介紹總體經濟，現在全球的經濟是連動的，例如中美貿易大戰影響到全球股價，金價油價對於美國股市也有很大的影響，今天這篇paper就是要來研究不同的指數，對於NASDAQ指數的影響。</p><p>這篇文章利用美股開盤前的所有重要指數，例如油價、貴金屬價格、以及全球股市的對於美股的影響，既然全球市場是連動的，那這其中必定有一些關聯，下圖就是這篇paper所使用的重要指數：</p><center><img src="/機器學習-總體經濟/data.png" title="本文所用到資料"></center><h3 id="建構features"><a href="#建構features" class="headerlink" title="建構features"></a>建構features</h3><p>這篇文章想要找出股價的趨勢，而不是絕對數值，所以其features除了股價外，也有一段時間股價的變化，這邊先叫做window size w，並且對於價格的變化進行normalize。</p><h3 id="分析features"><a href="#分析features" class="headerlink" title="分析features"></a>分析features</h3><p>我覺得本文值得讚許的地方在於有提供一些簡單的方法做features的分析，可以由這些方法知道哪些features對於預測是非常有幫助的！</p><p>論文中使用了cross correlation來分析各種不同商品的價格對於NASDAQ影響。要說明cross correlation，就要先從correlation說起，correlation是兩種不同的數據，其相關性的係數。correlation介於-1到1之間，分別代表這兩種時間序列之間的關聯性：</p><ul><li>correlation = -1：代表數據完全負相關，也就是A漲B就跌的概念</li><li>correlation = 0：代表數據之間沒什麼關聯，也就是A漲跌跟B漲跌完全沒關係</li><li>correlation = +1：代表數據之間是正相關，也就是AB同漲同跌的關係</li></ul><p>那「cross」又是什麼意思呢？就是將兩組時間序列的時間錯開，差N天，並且觀察其correlation。</p><p>下圖就是所有的商品對於NASDAQ的cross correlation 分析，X軸就是差N天的N，而Y軸就是correlation，可以看到，在X = 0 時，NASDAQ跟NASDAQ的相關性是1，代表NASDAQ與自己的指數完全正相關，而很多商品都會在N = 0時有正相關性！</p><center><img src="/機器學習-總體經濟/crosscorrelation.png" title="auto-correlation"></center><p>所以我們使用N = 0來預測NASDAQ的股價會是最好的，但是N = 0的資料是沒有辦法使用的，因為你不能在當天的開盤就知道NASDAQ的收盤價，這樣就代表用到未來數據了。</p><p>所以我們只能退而求其次，用 N &lt; 0 的資料，也就是前N天的資料，我們可以發現N = -1的地方有一點小突起，代表某些資料對於NASDAQ的correlation也是很高的，可以拿來利用！</p><p>唯一想吐槽的是這張圖很多顏色都重複，所以根本看不太清楚是哪些商品，拿來預測NASDAQ比較準。</p><h3 id="三個維度的-cross-correlation"><a href="#三個維度的-cross-correlation" class="headerlink" title="三個維度的 cross-correlation"></a>三個維度的 cross-correlation</h3><p>另外，這篇paper也提供了不同股價區間差w對於漲跌的correlation：</p><center><img src="/機器學習-總體經濟/crosscorrelation3d.png" title="auto-correlation"></center><p>可以發現商品價格與NASDAQ股價之間是有一定的關係的，假如商品之間彼此沒有關聯，這張圖就不會呈現三角形的山丘狀，而是會看起來像是隨機的樣子。</p><p>上面這張圖說明了一件事情，股價變化越長時間來觀察(w 越長)，NASDQL跟許多商品的前一天的correlation是越高的，可以藉由提高精準度！</p><p>藉由上述的兩個實驗，我們知道股價變化量的重要性，重點不是股價本身，而是股價的漲跌幅度才有辦法更好的預測股價～</p><p>除此之外，作者想要進一步知道哪些時間序列對於NASDQL是重要的，所以進行了一個簡單的預測實驗</p><h3 id="預測明天的價格"><a href="#預測明天的價格" class="headerlink" title="預測明天的價格"></a>預測明天的價格</h3><p>作者也利用每一個單一序列當作單一feature，來預測隔天的漲跌，發現利用DAX這個時間序列來預估NASDQL會得到最好的結果：</p><center><img src="/機器學習-總體經濟/importance.png" title="features的重要性"></center><p>作者並沒有說這邊的model是哪一種，我猜應該是SVM，因為feature_size很小。<br>這樣我們就可以找到比較重要跟不重要的時間序列，之所以要這樣是因為此篇paper有用SVM當作model，而SVM比較適用於小feature_size的traning set。</p><h3 id="預測N天後的價格"><a href="#預測N天後的價格" class="headerlink" title="預測N天後的價格"></a>預測N天後的價格</h3><p>除了每天的價格外，此paper也研究K天後的價格漲跌，發現K越大，則預測的能力越好，下圖中 K 為 x 軸</p><center><img src="/機器學習-總體經濟/multiple_day.png" title="預測多天後的漲跌"></center><h3 id="測試-w-的大小"><a href="#測試-w-的大小" class="headerlink" title="測試 w 的大小"></a>測試 w 的大小</h3><p>接下來，此paper也測試了不同的 w 對於訓練的成效： <a href="https://en.wikipedia.org/wiki/F1_score" rel="external nofollow noopener noreferrer" target="_blank">f1 score</a> 的影響，f1 score是precision跟recall的綜合分數，其中：</p><ul><li>precision 是所有 model 顯示為 true，而真正為 true 的比例</li><li>recall 是所有真正為 true 的資料，被 model 標示為 true 的比例</li></ul><p>f1 score 就是 precision 和 recall 的 harmonic mean。<a href="https://en.wikipedia.org/wiki/Harmonic_mean#Harmonic_mean_of_two_numbers" rel="external nofollow noopener noreferrer" target="_blank">harmonic mean</a>同時也被用在電阻的並聯計算上，你可以想像電阻並聯時，假如任何一個電阻太小，電流就會傾向從那裡通過，造成等效電阻很小。同理，你可以想像有一顆電阻叫做precision，另一顆叫做recall，任何一方太小，都會導致f1 score 變得很小。於是 f1 score 就是同時可以兼具 recall 和 accuracy 的一個優化指標。</p><center><img src="/機器學習-總體經濟/w.png" title="漲跌的時間窗格與 f1 score 比較"></center><p>上圖中的兩條線分別是 positive 和 negative 的 f1 score。當 w 在 0 或是 50 時，f1 score 相對來說比較好。</p><p>以上就是分析 w、K、等參數怎麼設定比較好的一些分析，當我們得到這些參數，並且建構出預測漲跌的model後，就可以將model產生的結果拿來回測</p><h3 id="回測績效"><a href="#回測績效" class="headerlink" title="回測績效"></a>回測績效</h3><p>這邊總共用了三種方法來回測：</p><ol><li>假如預測會漲，就持續於整段回測週期持有股票</li><li>當預測會漲機率上升時，持有股票，不然則賣出</li><li>當預測會漲時，持有，反之則賣出</li></ol><p>以下是回測的結果：</p><center><img src="/機器學習-總體經濟/backtest.png" title="回測"></center><p>可以發現利用第三種方式，回測的績效比較好，這邊跟我自己做出來的結論是差不多的。</p><h3 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h3><p>今天學到的一些知識：</p><ol><li>用cross-correlation來分析features</li><li>利用SVM來測驗單個features是否有辦法預測漲跌，進而分析feature的好壞</li><li>使用移動窗格來找出最佳的f1_score</li></ol><p>這篇paper利用ML的方式，找出世界上重要的商品價格之間的關聯，並且也有使用SVM或是MART來預測NASDAQ指數的漲跌，個人覺得滿有趣的。經總就應該這樣作研究！</p><p>美中不足的是應該可以歸納出一些現象，輔助一般不會程式的投資人，這樣會更好！</p><p><a href="https://pdfs.semanticscholar.org/b68e/8d2f4d2c709bb5919b82effcb6a7bbd3db37.pdf" rel="external nofollow noopener noreferrer" target="_blank">論文網址</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天&lt;a href=&quot;https://pdfs.semanticscholar.org/b68e/8d2f4d2c709bb5919b82effcb6a7bbd3db37.pdf&quot; rel=&quot;external nofollow noopener noreferrer&quot; ta
      
    
    </summary>
    
      <category term="AI看股票" scheme="https://www.finlab.tw/categories/AI%E7%9C%8B%E8%82%A1%E7%A5%A8/"/>
    
    
      <category term="機器學習" scheme="https://www.finlab.tw/tags/%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92/"/>
    
      <category term="Machine Learning" scheme="https://www.finlab.tw/tags/Machine-Learning/"/>
    
      <category term="程式交易" scheme="https://www.finlab.tw/tags/%E7%A8%8B%E5%BC%8F%E4%BA%A4%E6%98%93/"/>
    
      <category term="量化投資" scheme="https://www.finlab.tw/tags/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B3%87/"/>
    
  </entry>
  
  <entry>
    <title>論文導讀：機器學習與基因演算法選股</title>
    <link href="https://www.finlab.tw/%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92%E8%88%87%E5%9F%BA%E5%9B%A0%E6%BC%94%E7%AE%97%E6%B3%95%E9%81%B8%E8%82%A1/"/>
    <id>https://www.finlab.tw/機器學習與基因演算法選股/</id>
    <published>2018-11-27T13:41:15.000Z</published>
    <updated>2018-11-29T17:04:10.963Z</updated>
    
    <content type="html"><![CDATA[<p>feature selection 是機器學習中非常重要的一環，尤其是財經領域的程式交易部分，因為財經領域有各式各樣的指標，又有財報、技術指標，這些指標高達尚千種，要如何選擇features，才能更有效預測股價？</p><p>今天介紹一篇<a href="https://arxiv.org/pdf/1806.01743.pdf" rel="external nofollow noopener noreferrer" target="_blank">論文</a>，使用了基因演算法來幫忙選擇features，以下是更進一步的介紹：</p><center><img src="/機器學習與基因演算法選股/thumbnail.jpg" title="基因演算法"></center><p>對於machine learning的程式交易演算法來說，<br>首先要有features，features可以想像成是指標，每一支股票都會有其features。<br>另外還有labels，也就是我們希望能夠預測的數值，例如股價漲跌的幅度，或是sharp ratio。</p><p>只要有了features跟labels，剩下的就簡單了，只要把這些features跟labels都輸入到一個黑盒子裡面，讓它學習，學成之後，只需要每次給它新的features，它就會預判label是多少。這個黑盒子通常稱為model，model有很多種類，最常見的就是deep neural network或是 random forest ，這些我們待會會簡單的介紹。</p><p>本篇論文在選擇features的階段，使用了基因演算法，由於財報、技術指標的數字有上千種，該如何選擇呢？第一步驟就是就全部都選擇吧！反正基因演算法會找出有用的features並且刪除無用的，至於基因演算法是如何做到的？它是模仿達爾文物競天擇的方式來找出有用的features：</p><h3 id="第一步：決定染色體"><a href="#第一步：決定染色體" class="headerlink" title="第一步：決定染色體"></a>第一步：決定染色體</h3><p>以數學的方式描述，染色體是一條一維向量，其長度為所有features的長度，其數值為0或1，0代表不選入該feature，1代表選入該feature。</p><p>一開始會隨機製作出100條染色體，想必效果就是很隨機的，不是很好。<br>然而生物是會進化的，適者生存、不適者淘汰，要怎麼定義要淘汰的染色體呢？</p><center><img src="/機器學習與基因演算法選股/crossover_bits.png" title="兩條染色體互相結合"></center><h3 id="第二步：決定染色體的成績"><a href="#第二步：決定染色體的成績" class="headerlink" title="第二步：決定染色體的成績"></a>第二步：決定染色體的成績</h3><p>每一種染色體都代表一組features的選擇，單一染色體拿出來，用染色體所選入的features進行機器學習，最後評估機器學習的成果。在論文中，是使用<a href="https://medium.com/greyatom/lets-learn-about-auc-roc-curve-4a94b4d88152" rel="external nofollow noopener noreferrer" target="_blank">AUC</a>來當作每個染色體的成績。</p><p>當然這時就可以進行適者生存、不適者淘汰的步驟，選出100個成績比較好的染色體，成績越好的染色體越有機會被選出來，但是也有可能成績很好但懷才不遇被篩選掉，這邊此文並沒有很明確的說明機制是什麼，實作上也有很多種方法，最簡單就是直接選成績最好的100個染色體。</p><center><img src="/機器學習與基因演算法選股/selection.png" title="模擬物競天擇"></center><p>這個目的在於，基因演算法的最後，我們希望選出一條染色體，其AUC算出來是最高的，代表它能夠很有效的分別出會漲的股票跟會跌的股票。</p><h3 id="第三步：交叉遺傳"><a href="#第三步：交叉遺傳" class="headerlink" title="第三步：交叉遺傳"></a>第三步：交叉遺傳</h3><p>我們會由現有的染色體，藉由排列組合，產生更多的染色體，具體的做法是：產生新的20條染色體，每條染色體皆由某兩條現有染色體的片段所組成，例如染色體的上半部和下半部是由不同染色體所提供的。</p><center><img src="/機器學習與基因演算法選股/crossover.jpg" title="兩條染色體互相結合"></center><h3 id="第四步：變異"><a href="#第四步：變異" class="headerlink" title="第四步：變異"></a>第四步：變異</h3><p>這個步驟中，這120條染色體會稍微的被隨機修改，每條染色體有10％的機率，其當中的一個bit會被反轉（由0變成1，或是1變成0）</p><center><img src="/機器學習與基因演算法選股/mutation.png" title="變異"></center><p>上圖是一個三個bit變異的例子，有很多種的變異方式，本文中一次只更動一個bit而已。</p><h3 id="回到第二步，開始生物演化的循環"><a href="#回到第二步，開始生物演化的循環" class="headerlink" title="回到第二步，開始生物演化的循環"></a>回到第二步，開始生物演化的循環</h3><p>每經過一次2、3、4步驟，就像是完成了一個世代，隨著是帶的變遷，平均來說，AUC的成績應該會越來越好，直到AUC的成績不再進步，就可以停止演化的過程。而其成果就是步驟二中，選出擁有最高的AUC的染色體，代表這些被選到的features組合在一起，預測能力是最強的！</p><center><img src="/機器學習與基因演算法選股/evolution.png" title="利用演算法模擬演化的過程，進而找到最佳解"></center><h2 id="機器學習"><a href="#機器學習" class="headerlink" title="機器學習"></a>機器學習</h2><p>我們剛剛有說的，機器學習的model就像是黑盒子一樣，文中主要使用兩種model：deep neural network和random forest，都是非常常見的model，兩種model都有其優缺點，不一定哪個比較好。所以本文也提出了stacking的方式，將這兩種黑盒子的結果取平均，得出最後的答案，結果發現比單獨使用這兩種model更好。</p><h3 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h3><p>我個人是滿好奇features沒有經過normalize就跑DNN不會有問題嗎？滿奇怪的，感覺DNN應該要額外再preprocessing一下，但是文中並沒有提到，就當作作者忘記說明好了。</p><p>我以前的做法是自己憑經驗找有效的features並且放進去測試，這篇文章使用了基因演算法來幫助大家篩選features，進行程式交易，大量的降低了人工feature engineering的時間，當然電腦也是要算很久，雖然我沒試過，但以普通單機電腦來說，估計要好幾天才能跑出最佳解。個人認為這篇論文實做起來是有效的。</p><p><a href="https://arxiv.org/pdf/1806.01743.pdf" rel="external nofollow noopener noreferrer" target="_blank">論文網址</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;feature selection 是機器學習中非常重要的一環，尤其是財經領域的程式交易部分，因為財經領域有各式各樣的指標，又有財報、技術指標，這些指標高達尚千種，要如何選擇features，才能更有效預測股價？&lt;/p&gt;
&lt;p&gt;今天介紹一篇&lt;a href=&quot;https://
      
    
    </summary>
    
      <category term="AI看股票" scheme="https://www.finlab.tw/categories/AI%E7%9C%8B%E8%82%A1%E7%A5%A8/"/>
    
    
      <category term="機器學習" scheme="https://www.finlab.tw/tags/%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92/"/>
    
      <category term="Machine Learning" scheme="https://www.finlab.tw/tags/Machine-Learning/"/>
    
      <category term="程式交易" scheme="https://www.finlab.tw/tags/%E7%A8%8B%E5%BC%8F%E4%BA%A4%E6%98%93/"/>
    
      <category term="量化投資" scheme="https://www.finlab.tw/tags/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B3%87/"/>
    
  </entry>
  
  <entry>
    <title>加速度指標：歷史年報酬20％的策略</title>
    <link href="https://www.finlab.tw/%E5%8A%A0%E9%80%9F%E5%BA%A6%E6%8C%87%E6%A8%99-%E5%8A%A0%E9%80%9F%E4%BD%A0%E7%9A%84%E7%8D%B2%E5%88%A9/"/>
    <id>https://www.finlab.tw/加速度指標-加速你的獲利/</id>
    <published>2018-11-25T03:11:28.000Z</published>
    <updated>2018-11-29T17:01:50.388Z</updated>
    
    <content type="html"><![CDATA[<p>之前分享加速度指標，讓大家找出股價正在加速向上的股票，然而並沒有說明怎麼搭配，本篇文章就是在提供大家一個例子，我發現這個指標可以用在非常多種不同的程式交易策略上，績效很不錯，但是有訣竅。</p><h3 id="加速度指標回顧"><a href="#加速度指標回顧" class="headerlink" title="加速度指標回顧"></a>加速度指標回顧</h3><p>加速度指標，其實就是看均線的曲率是正的還是負的，但是由於股價的雜訊太大了，與其用微分的，我們提供一個比較間單的方式，來判斷曲率的正負：</p><p>(n天前 + 當天)/2 &gt; n/2天前 的k天均線</p><p>我們就說它正在加速，是很不錯的持有標的，至於背後的原理可以參考<a href="/簡易的外資-基本面策略/">之前的文章</a>！但是加速度指標還是有其弱點，必須要搭配其他指標，才能發揮作用</p><h3 id="加速度指標的癥結1：初始速度"><a href="#加速度指標的癥結1：初始速度" class="headerlink" title="加速度指標的癥結1：初始速度"></a>加速度指標的癥結1：初始速度</h3><p>加速度最大的癥結就在於，你不知道其速度！例如現在有兩個人賽跑，其中一個人加速度是正的，另一個人是負的，究竟誰會先抵達終點？</p><p>答案是不知道</p><p>因為你不知道起始速度是多少，假如有一個人根本逆著終點跑，就算他加速多快都沒有用！<br>就像有一支股票，只要止跌，其曲率就會看起來是正的，但是止跌的股票還會有一段震蕩，甚至有續跌的可能，所以買剛止跌的時候就買是沒有意義的，我們應該是要買剛起漲的股票才對～</p><p>下圖就是曲率正負和股價之間的分類，曲率為正時，股價有兩種可能：止跌、起漲。曲率為負時，股價也有兩種可能：止漲、起跌。</p><center><img src="/加速度指標-加速你的獲利/cases.jpg" title="正負曲率所對應到的股價"></center><p>當我們使用曲率為正的條件時，就會發現我們選到「止跌」或「起漲」股，然而我們真正是想選取「起漲」股，假如我們選了起漲股，那賣出時，曲率為負，自然就是止漲，而不會選到起跌股。</p><h3 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h3><p>所以我們加上一個股價的向上指標即可，這邊你可以使用KD值的K&gt;D（參數：240、120、120），來找出股價向上的股票，這樣加速度指標才有意義喔！</p><p>當然有很多種趨勢型指標都可以拿來用用看～我相信一定會有更好的選項，這邊只是舉例。</p><h3 id="加速度指標的癥結2：採樣點太少"><a href="#加速度指標的癥結2：採樣點太少" class="headerlink" title="加速度指標的癥結2：採樣點太少"></a>加速度指標的癥結2：採樣點太少</h3><p>基本上加速度指標就是三個點比大小，採樣的點非常少，就像電影只看開頭和結尾，想要把中間劇情都猜出來，是不太容易的。</p><p>下圖左方的例子中，我們只用了三個點來衡量曲率是正的還是負的（或是你可以想像是凹的還是凸的），可以發現就算曲率是正的，也有可能並不是我們想要的股價曲線。其中，紅色的股價是我們比較希望的，而不是綠色的。</p><h3 id="解決方法：多增加條件"><a href="#解決方法：多增加條件" class="headerlink" title="解決方法：多增加條件"></a>解決方法：多增加條件</h3><p>所以我們可以測試多個點，右圖我們用「兩組」三個點來觀察曲率（藍色跟黃色）可以發現，右上方得圖，不論用藍色的三個點或是黃色的三個點，曲率都是正的，而右下角的圖中，雖然用藍色的點看，曲率是正的，但是用黃色的點看的話，曲率是負的，於是就可以將這類型的股價給排除。</p><center><img src="/加速度指標-加速你的獲利/samples.jpg" title="一個曲率條件跟兩個曲率條件"></center><p>加速度指標要決定一個變數：n，是一個時間長度。我們可以列出多個n值不同加速度指標，這些加速度指標都符合時，我們再進行買入的動作。</p><p>我們讓n設定為50、20、15、10，一次增加四個加速度指標，來監控60天均線的曲率<br>賣出條件是n=30這個指標不符合條件時，於隔天剃除</p><h3 id="加速度指標的癥結3：沒有考慮公司營運狀況"><a href="#加速度指標的癥結3：沒有考慮公司營運狀況" class="headerlink" title="加速度指標的癥結3：沒有考慮公司營運狀況"></a>加速度指標的癥結3：沒有考慮公司營運狀況</h3><p>加速度指標為技術指標，並沒有考慮財報面，只要稍微判斷一下財報的狀況，就可以選出很不錯的股票～</p><h3 id="解決辦法"><a href="#解決辦法" class="headerlink" title="解決辦法"></a>解決辦法</h3><p>由於財報並不是這個策略的主角，我只用 ROE &gt; 3 這樣的條件就很足夠了</p><h3 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h3><p>我們敘述了加速度指標的不足，並且有根據的介紹怎麼樣新增條件，來完善我們的策略，以下就是這個策略的績效：</p><center><img src="/加速度指標-加速你的獲利/eq.png" title="獲利的績效"></center><p>藍色的為不添加手續費，而紅色的則是添加了手續費～效果滿不錯的！</p><p>這些參數我都沒有做任何優化，當然這些參數的選擇上還是得靠經驗，然而假如對於這些數字指標比較熟悉，大概就可以抓出有效的區間，進而選出好的標的。經過簡單的優化，甚至是增刪條件，都可以讓績效再提升。</p><p>下圖可以看到，最大下跌幅度在金融海嘯的時候莫名的高，必須要注意一下～～</p><center><img src="/加速度指標-加速你的獲利/mdd.png" title="最大下跌幅度"></center><p>對了，補充一下，我們的新平台悄悄上線，目前正在測試中，此策略的選股清單可以免費觀看：<a href="https://ai.finlab.tw/strategy/%E5%8A%A0%E9%80%9F%E5%BA%A6%E9%A0%86%E5%8B%A2%E7%AD%96%E7%95%A5" rel="external nofollow noopener noreferrer" target="_blank">加速度策略</a></p><p>這邊只是給大家一個雛形，可以將加速度指標用在股價，甚至是其他的財務數據上（月營收？），感覺都會滿有趣的！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前分享加速度指標，讓大家找出股價正在加速向上的股票，然而並沒有說明怎麼搭配，本篇文章就是在提供大家一個例子，我發現這個指標可以用在非常多種不同的程式交易策略上，績效很不錯，但是有訣竅。&lt;/p&gt;
&lt;h3 id=&quot;加速度指標回顧&quot;&gt;&lt;a href=&quot;#加速度指標回顧&quot; cla
      
    
    </summary>
    
      <category term="選股策略" scheme="https://www.finlab.tw/categories/%E9%81%B8%E8%82%A1%E7%AD%96%E7%95%A5/"/>
    
    
      <category term="選股策略" scheme="https://www.finlab.tw/tags/%E9%81%B8%E8%82%A1%E7%AD%96%E7%95%A5/"/>
    
      <category term="歷史回測" scheme="https://www.finlab.tw/tags/%E6%AD%B7%E5%8F%B2%E5%9B%9E%E6%B8%AC/"/>
    
      <category term="簡易策略" scheme="https://www.finlab.tw/tags/%E7%B0%A1%E6%98%93%E7%AD%96%E7%95%A5/"/>
    
      <category term="程式交易" scheme="https://www.finlab.tw/tags/%E7%A8%8B%E5%BC%8F%E4%BA%A4%E6%98%93/"/>
    
  </entry>
  
  <entry>
    <title>用KD值選股：還需搭配這三種指標</title>
    <link href="https://www.finlab.tw/%E7%94%A8KD%E5%80%BC%E9%81%B8%E8%82%A1%EF%BC%9A%E9%82%84%E9%9C%80%E6%90%AD%E9%85%8D%E9%80%99%E4%B8%89%E7%A8%AE%E6%8C%87%E6%A8%99/"/>
    <id>https://www.finlab.tw/用KD值選股：還需搭配這三種指標/</id>
    <published>2018-11-21T23:13:35.000Z</published>
    <updated>2018-11-29T17:13:37.627Z</updated>
    
    <content type="html"><![CDATA[<p>這篇文章將分享一個程式交易策略，以KD值為主，並且搭配其他的指標。<br>有很多人投資是看KD值的，但KD值的看法五花八門，究竟哪一種比較好用？<br>參數這麼多，究竟怎麼調績效比較好？<br>這篇文章示範一個中長期的程式交易策略，並講解製作策略的思路。</p><a id="more"></a><p>寫策略並模擬回測績效是非常重要的，通過回測，就能一眼看出來你的策略有沒有效。有人說歷史不等於未來，我覺得更正確的說，應該是「歷史不完全等於未來」，每年都有很多不同的黑天鵝，不同的國際政治變化，政黨輪替，然而假如你可以找到一個策略，不論環境如何變化，但是績效一直有穩定的成長，就代表你有可能找到了「歷史與未來會相同的某種選股邏輯」！</p><h3 id="KD值"><a href="#KD值" class="headerlink" title="KD值"></a>KD值</h3><p>今天我們就來試驗一下KD值程式交易選股，<br>首先，我傾向於把指標的參數拉長，原因是這樣比較容易抓的到股價的規律（以日K來說）。<br>不過我個人的研究發現趨勢指標型態不一樣，選出來的股票也會不一樣，<br>絕對不是只要股價會漲就好，而是要符合某些特定的數學條件。</p><p>這邊我選擇使用RSV 50, K 20, D 20，當作是參數（台股通常是9、3、3）。<br>當K大於D的時候買入，反之賣出，每天選股並重新平衡資產，可以得到以下的績效：</p><center><img src="/用KD值選股：還需搭配這三種指標/eq1.png" title="績效"></center><br><center><img src="/用KD值選股：還需搭配這三種指標/ns1.png" title="股票檔數"></center><p>紅色的是有考慮手續費，而藍色的則無。</p><p>然而這樣的選法是有一些弊端的！（尤其是手續費很高昂，股票換手率太高）<br>所以接下來我們就想辦法來解決，順便提高一下程式交易的績效～</p><h3 id="長期趨勢漲，可能會買在高點！"><a href="#長期趨勢漲，可能會買在高點！" class="headerlink" title="長期趨勢漲，可能會買在高點！"></a>長期趨勢漲，可能會買在高點！</h3><p>當K &gt; D時，股價會衝的很高，但是這時候買入就會買在高點了！<br>所以我們在使用長線KD值時，可以增加一個條件來確保不會買在高點：</p><p>當天股價 &lt; 10日平均</p><p>除了股價不能太高，同時股價也不能太低！</p><h3 id="股價必須高於年線"><a href="#股價必須高於年線" class="headerlink" title="股價必須高於年線"></a>股價必須高於年線</h3><p>我們在此參數下選出來的股票，假如股價沒有過年線的話，很容易漲到年線附近時，就被彈了回去，所以乾脆我們選股的時候，就直接選高於年線的，就不會有這個問題了XD</p><h3 id="增加一些常用的財務指標"><a href="#增加一些常用的財務指標" class="headerlink" title="增加一些常用的財務指標"></a>增加一些常用的財務指標</h3><p>程式交易除了用技術指標外，我們也可以增加一些財務指標，例如ROE：<br>ROE近1季大於ROE近4季平均</p><p>當然也有很多別的選項，我這邊就選一個好用的入門款XD，</p><h3 id="三種條件依序加上後的結果"><a href="#三種條件依序加上後的結果" class="headerlink" title="三種條件依序加上後的結果"></a>三種條件依序加上後的結果</h3><p>可以發現，從下到上依序就是：</p><ol><li>使用KD值</li><li>除了上述以外，額外增加：股價短線別太高</li><li>除了上述以外，額外增加：股價長線別太低</li><li>除了上述以外，額外增加：財務數據</li></ol><center><img src="/用KD值選股：還需搭配這三種指標/eqall.png" title="條件選股比較"></center><p>不過以上是沒有增加手續費的，因為我的回測系統每天都會重新權益平衡，所以有非常多不必要的摩擦成本，此時手續費折扣就非常的重要了！</p><p>最後我新增了一些不太重要的條件（為了減少股票檔數），整理成下圖，紅色為有手續費，藍色沒有手續費，只能說以人工調配持股應該會有更好的成果～有興趣可以研究看看！</p><center><img src="/用KD值選股：還需搭配這三種指標/eqf.png" title="績效"></center><br><center><img src="/用KD值選股：還需搭配這三種指標/nsf.png" title="股票檔數"></center>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;這篇文章將分享一個程式交易策略，以KD值為主，並且搭配其他的指標。&lt;br&gt;有很多人投資是看KD值的，但KD值的看法五花八門，究竟哪一種比較好用？&lt;br&gt;參數這麼多，究竟怎麼調績效比較好？&lt;br&gt;這篇文章示範一個中長期的程式交易策略，並講解製作策略的思路。&lt;/p&gt;
    
    </summary>
    
      <category term="選股策略" scheme="https://www.finlab.tw/categories/%E9%81%B8%E8%82%A1%E7%AD%96%E7%95%A5/"/>
    
    
      <category term="選股策略" scheme="https://www.finlab.tw/tags/%E9%81%B8%E8%82%A1%E7%AD%96%E7%95%A5/"/>
    
      <category term="KD" scheme="https://www.finlab.tw/tags/KD/"/>
    
      <category term="程式交易" scheme="https://www.finlab.tw/tags/%E7%A8%8B%E5%BC%8F%E4%BA%A4%E6%98%93/"/>
    
      <category term="技術指標" scheme="https://www.finlab.tw/tags/%E6%8A%80%E8%A1%93%E6%8C%87%E6%A8%99/"/>
    
  </entry>
  
  <entry>
    <title>Python：如何獲得上市上櫃股票清單</title>
    <link href="https://www.finlab.tw/Python%EF%BC%9A%E5%A6%82%E4%BD%95%E7%8D%B2%E5%BE%97%E4%B8%8A%E5%B8%82%E4%B8%8A%E6%AB%83%E8%82%A1%E7%A5%A8%E6%B8%85%E5%96%AE/"/>
    <id>https://www.finlab.tw/Python：如何獲得上市上櫃股票清單/</id>
    <published>2018-11-19T22:55:04.000Z</published>
    <updated>2018-11-29T17:08:14.711Z</updated>
    
    <content type="html"><![CDATA[<p>接下來為期幾天，將為大家打下python更深刻的基礎，適合剛學python，但是對pandas不太熟的讀者，這次我們就來把所有的股票代號給爬下來，並整理一番喔！</p><p>Python真的很厲害～可以用少少的語法達到非常多的功能<br>我覺得python搭配excel是沒有必要的，直接使用python替代excel才是最佳的方式！</p><center><img src="/Python：如何獲得上市上櫃股票清單/6.png" title="python基礎教學"></center><p>這禮拜終於比較悠閒一點，開始寫blog了，目前主要還是繼續培養大家的python實力為主，因為有一些同學說明課程有些地方跳的比較快，其實可以參考一些網路上免費的python課程來補齊，不過此blog也會隨時補充一些實用的功能，或是簡單的 python 常用的package和語法，幫助大家熟練 python。</p><p>今天要做的就是取得上市櫃股票代號與分類，首先，我們想要爬的網頁是：<br><a href="http://isin.twse.com.tw/isin/C_public.jsp?strMode=2" rel="external nofollow noopener noreferrer" target="_blank">http://isin.twse.com.tw/isin/C_public.jsp?strMode=2</a></p><p>其中<code>strMode=2</code>就是上市，而<code>strMode=4</code>就是上櫃，接下來我們就來將此網頁下載下來吧！</p><h3 id="爬取網頁"><a href="#爬取網頁" class="headerlink" title="爬取網頁"></a>爬取網頁</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">res = requests.get(<span class="string">"http://isin.twse.com.tw/isin/C_public.jsp?strMode=2"</span>)</span><br></pre></td></tr></table></figure><p>其中，我們使用了常用的 package 叫做 requests，可以模擬網頁瀏覽器，其中 <code>requests.get</code> 就是模擬我們連到該網頁，下載網頁的原始碼～</p><center><img src="/Python：如何獲得上市上櫃股票清單/1.png" title="爬取網頁"></center><h3 id="將網頁轉成-DataFrame"><a href="#將網頁轉成-DataFrame" class="headerlink" title="將網頁轉成 DataFrame"></a>將網頁轉成 DataFrame</h3><p>我們用了上述的程式碼，就可以獲得該網頁的原始碼，瀏覽器就是用這些原始碼渲染成網頁讓您操作的，我們可以從網頁原始碼中萃取出表格，產生 DataFrame</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_html(res.text)[<span class="number">0</span>]</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p>第一行：<code>pd</code> 就是我們萃取原始碼的package，全名叫做 <code>pandas</code> ，你可以想像 <code>pandas</code> 就是 python 界的 <code>excel</code> 軟體，可以操作各式各樣的表格，進行運算。</p><p>第三行：我們可以利用 <code>pd.read_html</code> 將我們剛剛爬取到的網頁原始碼 <code>res.text</code> 中的表格給萃取出來，而其中 <code>[0]</code> 是指說，萃取出來的可能有很多張表格，我們只需要第一張表格即可～</p><center><img src="/Python：如何獲得上市上櫃股票清單/2.png" title="將網頁轉成DataFrame"></center><h3 id="整理資料-1-整理column名稱"><a href="#整理資料-1-整理column名稱" class="headerlink" title="整理資料 1 整理column名稱"></a>整理資料 1 整理column名稱</h3><p>可以看到上圖，目前column名稱只是1、2、3、4，一些數字而已，但我們希望它們是有意義的文字，而我們又可以發現，其中第一行row，就是我們所需要的，所以，我們可以將第一行變成columns的名稱：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 設定column名稱</span></span><br><span class="line">df.columns = df.iloc[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># 刪除第一行</span></span><br><span class="line">df = df.iloc[<span class="number">1</span>:]</span><br></pre></td></tr></table></figure><center><img src="/Python：如何獲得上市上櫃股票清單/3.png" title="整理column名稱"></center><h3 id="整理資料-2-刪除冗餘行列"><a href="#整理資料-2-刪除冗餘行列" class="headerlink" title="整理資料 2 刪除冗餘行列"></a>整理資料 2 刪除冗餘行列</h3><p>接下來我們發現整理好column名稱後，還是有一些row很明顯是多餘的，我們必須要把它們刪除，刪除的方式，最簡單就是使用 <code>dropna</code>，並且設定當 <code>row</code> 或是 <code>column</code> 的 <code>NaN</code> 數量大於某個數字（例如3）時，我們就將該 <code>column</code> 或 <code>row</code> 移除：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先移除row，再移除column，超過三個NaN則移除</span></span><br><span class="line">df = df.dropna(thresh=<span class="number">3</span>, axis=<span class="number">0</span>).dropna(thresh=<span class="number">3</span>, axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><center><img src="/Python：如何獲得上市上櫃股票清單/4.png" title="刪除多餘的行列"></center><h3 id="設定index"><a href="#設定index" class="headerlink" title="設定index"></a>設定index</h3><p>我們可以看到index目前也是數字，我們希望它是股票代號，則可以使用<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = df.set_index(<span class="string">'有價證券代號及名稱'</span>)</span><br></pre></td></tr></table></figure><br>即可！</p><center><img src="/Python：如何獲得上市上櫃股票清單/5.png" title="最後的成果"></center><p>由今天的練習，我們學到了使用 <code>requests</code> 來模擬瀏覽器，用 <code>pandas</code> 解析出網頁中的 table，並且利用 <code>pandas</code> 中的功能，將 table 作整理！</p><p>博士班口試結束了，接下來我會盡力開始維持blog正常出貨！也希望能提供更多的選股、程式上的教學！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;接下來為期幾天，將為大家打下python更深刻的基礎，適合剛學python，但是對pandas不太熟的讀者，這次我們就來把所有的股票代號給爬下來，並整理一番喔！&lt;/p&gt;
&lt;p&gt;Python真的很厲害～可以用少少的語法達到非常多的功能&lt;br&gt;我覺得python搭配excel是
      
    
    </summary>
    
      <category term="python財經" scheme="https://www.finlab.tw/categories/python%E8%B2%A1%E7%B6%93/"/>
    
    
      <category term="python" scheme="https://www.finlab.tw/tags/python/"/>
    
      <category term="程式交易" scheme="https://www.finlab.tw/tags/%E7%A8%8B%E5%BC%8F%E4%BA%A4%E6%98%93/"/>
    
      <category term="入門教學" scheme="https://www.finlab.tw/tags/%E5%85%A5%E9%96%80%E6%95%99%E5%AD%B8/"/>
    
      <category term="爬蟲" scheme="https://www.finlab.tw/tags/%E7%88%AC%E8%9F%B2/"/>
    
  </entry>
  
  <entry>
    <title>超簡單用Python預測股價</title>
    <link href="https://www.finlab.tw/%E8%B6%85%E7%B0%A1%E5%96%AE-Machine-Learning-%E9%A0%90%E6%B8%AC%E8%82%A1%E5%83%B9/"/>
    <id>https://www.finlab.tw/超簡單-Machine-Learning-預測股價/</id>
    <published>2018-08-27T23:55:29.000Z</published>
    <updated>2018-11-29T17:05:14.311Z</updated>
    
    <content type="html"><![CDATA[<p>多虧了python，用最先進的統計模型來預測股價，程式交易超簡單！<br>不用安裝程式，今天我們雲端寫code，適合完完全全的初學者！<br>非常多非常多的人都用 python 在開發程式，<br>因此，有很多高深數學軟體，都會有很多民間高手來實做，<br>而我們只要會用就好了！學python從這篇開始！<br><a id="more"></a></p><center><img src="/超簡單-Machine-Learning-預測股價/j4.png" title="短中長線預測"></center><p>我們還是來稍微科普一下相關的程式交易知識好了</p><h3 id="什麼是model（模型）"><a href="#什麼是model（模型）" class="headerlink" title="什麼是model（模型）"></a>什麼是model（模型）</h3><p>模型就是一種能夠預測真實資料的數學公式，<br>通常會是一個function，例如 f 好了，<br>假如我們有一條時間序列 f(t) = at + b<br>只要知道了變數 a 跟 b，就可以計算出 t 每一刻的 f(t) 是多少</p><p>要怎麼知道 a 跟 b 是多少？<br>只要看其中兩個歷史時刻的位置即可：例如我們知道 f(1) = 1 且 f(2) = 2<br>則我們可以推算出 a = 1 且 b = 0，<br>並且預知 f(3) = 3 、 f(4) = 4 、 f(5) = 5 …</p><p>股價模型也是一樣，但是這個模型會比較複雜，不會只有 a、b 而已<br>不過規則是一樣的，我們要用歷史股價去計算類似 a、b 的變數，通常稱之為 fitting<br>找到 a、b 後就能夠用模型來預測股價了！</p><h3 id="用什麼模型預測股價呢？"><a href="#用什麼模型預測股價呢？" class="headerlink" title="用什麼模型預測股價呢？"></a>用什麼模型預測股價呢？</h3><p>Facebook 最近推出了一個新型的時間序列預測模型Prophet，中文叫作預言家，<br>預言家可以預測一些週期性的時間序列<br>例如下圖，一個FB每天PO文的數量圖，隨時間關係圖：</p><center><img src="/超簡單-Machine-Learning-預測股價/pp1.png" title="每天PO文的數量 DataFrame"></center><p>截圖自<a href="https://peerj.com/preprints/3190.pdf" rel="external nofollow noopener noreferrer" target="_blank">fb論文</a></p><p>圖中，每個時間都只會對應到一個點，就是每天的PO文數量<br>我們可以觀察到一些現象：</p><h3 id="以每週來檢視"><a href="#以每週來檢視" class="headerlink" title="以每週來檢視"></a>以每週來檢視</h3><p>上圖中，顏色的不同代表每週的變化量，禮拜六看起來明顯就比較少人用FB，<br>（週末都跑去玩了？XD）</p><h3 id="以每年來檢視"><a href="#以每年來檢視" class="headerlink" title="以每年來檢視"></a>以每年來檢視</h3><p>我們也可以發現，以年度來說，暑假時PO文數會下降<br>（大家都去放暑假了？）</p><p>每個週期下都有各自的規律，傳統的模型能夠成功預測嗎？</p><h3 id="傳統模型的限制"><a href="#傳統模型的限制" class="headerlink" title="傳統模型的限制"></a>傳統模型的限制</h3><p>其實已經有很多模型了，但為什麼FB還要推出一個新的呢？<br>原因是，以前的模型並沒有辦法多週期性的預測 f(t) ：</p><center><img src="/超簡單-Machine-Learning-預測股價/pp2.png" title="傳統模型預測的結果 DataFrame"></center><p>這張圖的每個row是不同的模型<br>圖中每條「實線」就是預測模型的結果，<br>可以看出以往的模型，預測出來結果並不是很準</p><h3 id="預言家模型"><a href="#預言家模型" class="headerlink" title="預言家模型"></a>預言家模型</h3><p>下圖中，可以發現預言家模型比上述的模型預測的更準確</p><center><img src="/超簡單-Machine-Learning-預測股價/pp3.png" title="預言家模型預測的結果 DataFrame"></center><p>預言家模型最厲害的地方，<br>就是用多條 Fourier Series，去擬合（fitting）時間序列<br>在這邊就不把可怕的公式放上來了，<br>有興趣可以參考 <a href="https://peerj.com/preprints/3190.pdf" rel="external nofollow noopener noreferrer" target="_blank">fb論文</a><br>可以將週期調整至「每年」「每季」「每週」！<br>模型簡單可以寫成這樣：</p><p>f(t) = year(t) + season(t) + week(t) + trend(t)</p><p>甚至在fitting完（找到a、b等參數後）可以將 f(t) 的成分拆解出來看：</p><center><img src="/超簡單-Machine-Learning-預測股價/pp5.png" title="不同週期下的函數 DataFrame"></center><p>而最後的 f(t) 就是這些曲線的疊加，<br>由上圖第三張，我們可以額外發現，聖誕節的時候，使用FB的人數下降非常快<br>外國的聖誕節，就是與家人團聚的時光，（像是我們的農曆新年）<br>所以不太會用手機的緣故</p><p>這篇論文大意就講到這裡，<br>詳情可以參考：<a href="https://peerj.com/preprints/3190.pdf" rel="external nofollow noopener noreferrer" target="_blank">此論文</a></p><h3 id="用預言家預測股票"><a href="#用預言家預測股票" class="headerlink" title="用預言家預測股票"></a>用預言家預測股票</h3><p>看完了學術的部分，接下來我們就實際的來使用預言家模型預測股價吧！<br>要預測的精準，我們要找有週期性的股票來分析，<br>這邊我就隨性的拿台積電當作是標的來預測囉～</p><h3 id="超簡單環境設定"><a href="#超簡單環境設定" class="headerlink" title="超簡單環境設定"></a>超簡單環境設定</h3><p>安裝python、安裝jupyter？<br>不用，google提供了強大的雲端notebook，讓我們可以直接玩程式：<br><a href="https://colab.research.google.com/" rel="external nofollow noopener noreferrer" target="_blank">https://colab.research.google.com/</a><br>打開連結，開啟新的notebook，在雲端寫程式！<br>當然你有python也可以開自己的，快的多</p><p>這次為了方便大家學習，我已經將環境建設好了！<br>在任意cell輸入：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">!git clone https://github.com/koreal6803/Stocker.git</span><br><span class="line">!pip install -r Stocker/requirements.txt</span><br></pre></td></tr></table></figure><br>即可完成！<br>需要一段安裝時間，使用google colab的話，可以去休息一下，喝個水再回來XD</p><center><img src="/超簡單-Machine-Learning-預測股價/j0.png" title="初始設定"></center><p>上述代碼中，每行開頭的驚嘆號，可以讓你把jupyter 當作 terminal 在用，<br>（不過假如windows用戶沒有git可能就無法…點上面google 線上程式連結）</p><h3 id="去除煩人的-warrning"><a href="#去除煩人的-warrning" class="headerlink" title="去除煩人的 warrning"></a>去除煩人的 warrning</h3><p>接下來，我們先來刪除惱人的warrning，最近pandas越來越煩<br>一堆warrning…看了心煩直接刪除</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line"></span><br><span class="line"><span class="comment">### 去除煩人的 warrning</span></span><br><span class="line">warnings.filterwarnings(<span class="string">'ignore'</span>)</span><br></pre></td></tr></table></figure><h3 id="讀入台積電股價"><a href="#讀入台積電股價" class="headerlink" title="讀入台積電股價"></a>讀入台積電股價</h3><p>接下來就讀入附帶的台積點股價：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment">### 讀入series</span></span><br><span class="line">df = pd.read_csv(<span class="string">'Stocker/price.csv'</span>, index_col=<span class="string">'date'</span>, parse_dates=[<span class="string">'date'</span>])</span><br><span class="line">price = df.squeeze()</span><br><span class="line">price.head()</span><br></pre></td></tr></table></figure><center><img src="/超簡單-Machine-Learning-預測股價/j1.png" title="讀取台積點收盤價"></center><p>其中的squeeze就是將dataframe變成series的function，<br>你可以用<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(df)</span><br><span class="line">print(df.squeeze)</span><br></pre></td></tr></table></figure><br>來查看其中差別</p><h3 id="創建Stocker"><a href="#創建Stocker" class="headerlink" title="創建Stocker"></a>創建Stocker</h3><p>這個Stocker並不是我寫的package，<br>而是利用<a href="https://github.com/WillKoehrsen/Data-Analysis/tree/master/stocker" rel="external nofollow noopener noreferrer" target="_blank">國外別人寫好的</a><br>，再額外修改成更方便的版本</p><p>用法很簡單，把股價的series丟進去就可以了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Stocker.stocker <span class="keyword">import</span> Stocker</span><br><span class="line">tsmc = Stocker(price)</span><br></pre></td></tr></table></figure><h3 id="預測中期走勢"><a href="#預測中期走勢" class="headerlink" title="預測中期走勢"></a>預測中期走勢</h3><p>接下來我們就可以用它來預測中期走勢，只需要一行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model, model_data = tsmc.create_prophet_model(days=<span class="number">90</span>)</span><br></pre></td></tr></table></figure><center><img src="/超簡單-Machine-Learning-預測股價/j2.png" title="讀取台積點收盤價"></center><p>其中綠色的就是預測出來的股價，而淺綠色區域就是信賴區間，股價大約就會落於此區間內，<br>程式中的信賴區間為80％，也代表了，每五天就約有一天的股價會落於信賴區間之外，<br>可以看到預測時間越久（沒實際股價的地方），不確定性越大，所以綠色的區間也就稍微變大<br>可以用來當作布林區間的感覺</p><h3 id="這樣預測準確嗎？"><a href="#這樣預測準確嗎？" class="headerlink" title="這樣預測準確嗎？"></a>這樣預測準確嗎？</h3><p>不確定，所以我們可以把時間還原到一年前，來看看假如當時預測的結果，跟至今是不是有差別，<br>我們不讓Stocker使用近一年的股價來fitting，出來的曲線跟實際的股價做比較：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsmc.evaluate_prediction()</span><br></pre></td></tr></table></figure><center><img src="/超簡單-Machine-Learning-預測股價/j3.png" title="預測準確度檢查"></center><p>上圖中，紅色虛線就是開始預測的當下，紅色線以後的時間都是預言家預測的結果<br>而藍色則為預測的真實股價，黃色則是信賴區間</p><h3 id="不準怎麼辦？"><a href="#不準怎麼辦？" class="headerlink" title="不準怎麼辦？"></a>不準怎麼辦？</h3><p>沒關係，我們可以調整短中長期的參數，讓它預測短中長期股價：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsmc.changepoint_prior_analysis(changepoint_priors=[<span class="number">0.001</span>, <span class="number">0.05</span>, <span class="number">0.1</span>, <span class="number">0.2</span>])</span><br></pre></td></tr></table></figure><br>下圖中，可以看到藍色的線比較偏趨勢，不隨當下股價起舞，算是長期的趨勢預測<br>而黃色則是非常貼近股價，算是短期的預測<br>使用者可以自行調整參數，來決定短中長線的應用</p><center><img src="/超簡單-Machine-Learning-預測股價/j4.png" title="短中長線預測"></center><h3 id="拿來預測股價了！"><a href="#拿來預測股價了！" class="headerlink" title="拿來預測股價了！"></a>拿來預測股價了！</h3><p>我們藉由上述的參數枚舉，可以知道哪一個參數（<code>changepoint_prior</code>）是最好的<br>我們可以藉由執行<code>predict_future</code> 來預測股價囉！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsmc.predict_future(days=100)</span><br></pre></td></tr></table></figure></p><center><img src="/超簡單-Machine-Learning-預測股價/j5.png" title="讀取台積點收盤價"></center><p>藉由Stocker，我們可以很輕易的預測股價，<br>至於其準確性，還有待各位看官們回測看看囉！</p><p>有上左方課程的同學，可以很輕易的使用Stocker來檢驗歷史報酬率是多少！<br>可以試著找到最佳的參數，並盡量選擇有週期性的股票～<br>期待你們的成果！</p><p>此程式的一些連結：<br><a href="https://github.com/koreal6803/Stocker" rel="external nofollow noopener noreferrer" target="_blank">此程式的github</a><br><a href="https://colab.research.google.com/drive/1KFhAhgtUcVVS1nMKlZicMjzGQZWKA6sc" rel="external nofollow noopener noreferrer" target="_blank">此程式的notebook</a><br><a href="https://towardsdatascience.com/stock-prediction-in-python-b66555171a2" rel="external nofollow noopener noreferrer" target="_blank">國外Stocker文章</a><br><a href="https://github.com/WillKoehrsen/Data-Analysis/tree/master/stocker" rel="external nofollow noopener noreferrer" target="_blank">國外github</a><br><a href="https://github.com/facebook/prophet" rel="external nofollow noopener noreferrer" target="_blank">預言家github</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;多虧了python，用最先進的統計模型來預測股價，程式交易超簡單！&lt;br&gt;不用安裝程式，今天我們雲端寫code，適合完完全全的初學者！&lt;br&gt;非常多非常多的人都用 python 在開發程式，&lt;br&gt;因此，有很多高深數學軟體，都會有很多民間高手來實做，&lt;br&gt;而我們只要會用就好了！學python從這篇開始！&lt;br&gt;
    
    </summary>
    
      <category term="財經Python教學" scheme="https://www.finlab.tw/categories/%E8%B2%A1%E7%B6%93Python%E6%95%99%E5%AD%B8/"/>
    
    
      <category term="Machine Learning" scheme="https://www.finlab.tw/tags/Machine-Learning/"/>
    
      <category term="python" scheme="https://www.finlab.tw/tags/python/"/>
    
      <category term="程式交易" scheme="https://www.finlab.tw/tags/%E7%A8%8B%E5%BC%8F%E4%BA%A4%E6%98%93/"/>
    
      <category term="股價預測" scheme="https://www.finlab.tw/tags/%E8%82%A1%E5%83%B9%E9%A0%90%E6%B8%AC/"/>
    
  </entry>
  
  <entry>
    <title>簡單又有效：股價加速度選股指標</title>
    <link href="https://www.finlab.tw/%E7%B0%A1%E6%98%93%E7%9A%84%E5%A4%96%E8%B3%87-%E5%9F%BA%E6%9C%AC%E9%9D%A2%E7%AD%96%E7%95%A5/"/>
    <id>https://www.finlab.tw/簡易的外資-基本面策略/</id>
    <published>2018-07-14T16:04:31.000Z</published>
    <updated>2018-11-29T17:11:05.968Z</updated>
    
    <content type="html"><![CDATA[<p>本文分享了製作策略的過程，還有一個獨家的指標，組合成有效且強力的選股邏輯，<br>原本是要作三大法人策略，但陰錯陽差而寫成了另外一個程式交易策略，分享給大家，<br>這個指標只用到了國小數學，但是個人覺得還滿有效的！</p><h3 id="究竟是如何完成一個策略的？"><a href="#究竟是如何完成一個策略的？" class="headerlink" title="究竟是如何完成一個策略的？"></a>究竟是如何完成一個策略的？</h3><p>建構一個好的指標並不容易，大約是以下幾個步驟：</p><ol><li>有一個初始的想法（某天，我想製作一個三大法人指標）</li><li>回測看看（怎麼測怎麼悲劇）</li><li>檢查買賣訊號，修改一下，並回到步驟2（以為想到好方法，但空歡喜一場）</li><li>終於跳出2-&gt;3-&gt;2-&gt;3的循環，成功做出策略（發現根本不是三大法人策略XD）</li></ol><p>通常我們就會在步驟2跟3不斷循環，直到成功為止，<br>假如你試了一百萬次，總能夠找到一個好策略，<br>但就是會花很久的時間就是了…</p><h3 id="如何快速建構出一個好策略？"><a href="#如何快速建構出一個好策略？" class="headerlink" title="如何快速建構出一個好策略？"></a>如何快速建構出一個好策略？</h3><p>個人根據經驗，歸納了一些簡單小技巧，幫助你更快速的找到好策略：</p><ol><li>單看某些條件直接回測，看該因子會不會反映於股價（通常好壞會差滿多的）</li><li>知道該因子的數值分佈狀況（例如：ROE要多高才算高？），才能輕鬆產生嚴苛或寬鬆的條件</li><li>將有用的條件組合，並適當的調整條件的鬆緊（由寬鬆往嚴苛的方向，調整試試看）</li></ol><p>以上是我自己回測時常用到的方法，<br>另外，回測系統也是滿重要的，可以快速驗證、組合各種不同的條件，<br>回測系統有可以講很多東西，先別離提好了，回到今天的策略</p><h3 id="這是個誤打誤撞的策略"><a href="#這是個誤打誤撞的策略" class="headerlink" title="這是個誤打誤撞的策略"></a>這是個誤打誤撞的策略</h3><p>其實我原本是想研究三大法人的策略，<br>但發現三大法人除了投信外，怎麼寫都寫不出來XD<br>最後，反而研究出了一個簡單好用的指標！<br>反倒是外資在這個策略中，比較算是輔助條件，不是最重要的條件<br>以下就是這個指標的介紹</p><h3 id="漲跌加減速指標"><a href="#漲跌加減速指標" class="headerlink" title="漲跌加減速指標"></a>漲跌加減速指標</h3><p>我們可以把股價想像成汽車前進後退，這樣的話，價格的漲跌就對應到車子移動，<br>國中我們都學過<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub><mo>=</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><mi>v</mi><mi>t</mi><mo>+</mo><mfrac><mrow><mn>1</mn></mrow><mrow><mn>2</mn></mrow></mfrac><mi>a</mi><msup><mi>t</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">x_t = x_0 + vt + \frac{1}{2}at^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.32144em;"></span><span class="strut bottom" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">t</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">0</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.03588em;">v</span><span class="mord mathit">t</span><span class="mbin">+</span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord mathrm">2</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mord mathit">a</span><span class="mord"><span class="mord mathit">t</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></span><br>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">0</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>是買入股價，而<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">t</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>是賣出的股價<br>我們想要 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub><mo>&gt;</mo><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_t &gt; x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.5391em;"></span><span class="strut bottom" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">t</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">&gt;</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">0</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>，代表有獲利<br>那就等同於代表我們希望 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">v &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">v</span><span class="mrel">&gt;</span><span class="mord mathrm">0</span></span></span></span>且<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span><span class="mrel">&gt;</span><span class="mord mathrm">0</span></span></span></span><br>代表股價有機會越來越高，也就比較可能會獲利！<br>其中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">v &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">v</span><span class="mrel">&gt;</span><span class="mord mathrm">0</span></span></span></span> 比較簡單，就是今天股價比n天前高就行了<br>但是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span><span class="mrel">&gt;</span><span class="mord mathrm">0</span></span></span></span>要怎麼表示呢？就是我們接下來要探討的了</p><p>下圖中，藍色的曲線為均線，而紅色線與黃色的點為指標<br>當今天黃點在紅線下方時，代表目前股價的加速度（曲率）大於零，所以股價之後上漲的機率高（買點）<br>當今天黃點在紅線上方時，代表目前股價的加速度（曲率）小於零，所以股價之後下跌的機率高（賣點）</p><center><img src="/簡易的外資-基本面策略/indicator.png" title="指標的示意圖，其中藍色的曲線為股價平均線，紅線和黃色點為指標，當紅線高於黃點時，表示加速度為正，可以偏多操作，而紅線低於黃點時，表示加速度為負，偏空操作"></center><p>有了這個邏輯，接下來，我們可以寫出數學公式</p><h3 id="如何寫成條件式？"><a href="#如何寫成條件式？" class="headerlink" title="如何寫成條件式？"></a>如何寫成條件式？</h3><p>寫成數學公式也很簡單，我們只要判斷圖中的紫色點跟黃色點，哪個比較高就可以了，</p><ul><li>紫色點的價格：（今天均線價格 + 2n天前均線價格）/2</li><li>黃色點的價格：第n天前的均線價格</li></ul><p>所以總結我們的加速度指標就是：</p><p>加速指標 = (紫色點價格 ─ 黃色點價格) / 黃色點價格</p><p>當此指標為正的時候，代表加速度越大（越容易漲）<br>此指標為負的時候，代表加速度越小（越容易跌）</p><h3 id="簡單，但是有效果！"><a href="#簡單，但是有效果！" class="headerlink" title="簡單，但是有效果！"></a>簡單，但是有效果！</h3><p>我也是走實用路線的，其實交易策略的論文有很多，選股方法也有很多種<br>我喜歡的策略可以這樣排序：</p><ol><li>簡單又有效的方法</li><li>簡單但無效的方法</li><li>困難但有效的方法</li><li>困難又無效的方法</li></ol><p>我比較推崇簡單的方法，因為實做困難的策略，要耗費大量的時間，但最後不一定有效，<br>相反的，做一個簡單的策略，只需要花一點點時間，但成功後，效果往往不差，失敗了也沒關係，<br>至少是快速失敗，總比花了大量的人力精力，最後發現無用來的好。</p><h3 id="先來看一下回測的結果"><a href="#先來看一下回測的結果" class="headerlink" title="先來看一下回測的結果"></a>先來看一下回測的結果</h3><p>以加速度指標為主體，搭配一些其它條件，我們可以歷史權益曲線報酬率為下圖，大約有十年十倍，<br>紅色的曲線考慮手續費，而藍色不考慮手續費，<br>可以發現有沒有手續費還是差滿多的！尤其是這種每天都要買賣的策略，</p><center><img src="/簡易的外資-基本面策略/eq.png" title="回測的結果，紅色的曲線考慮手續費，而藍色不考慮手續費。 DataFrame"></center><p>下一篇，我就會介紹該策略的詳細條件跟參數，並且附上程式碼～讓大家來玩一下～敬請期待！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文分享了製作策略的過程，還有一個獨家的指標，組合成有效且強力的選股邏輯，&lt;br&gt;原本是要作三大法人策略，但陰錯陽差而寫成了另外一個程式交易策略，分享給大家，&lt;br&gt;這個指標只用到了國小數學，但是個人覺得還滿有效的！&lt;/p&gt;
&lt;h3 id=&quot;究竟是如何完成一個策略的？&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="指標分析" scheme="https://www.finlab.tw/categories/%E6%8C%87%E6%A8%99%E5%88%86%E6%9E%90/"/>
    
      <category term="技術面" scheme="https://www.finlab.tw/categories/%E6%8C%87%E6%A8%99%E5%88%86%E6%9E%90/%E6%8A%80%E8%A1%93%E9%9D%A2/"/>
    
    
      <category term="外資" scheme="https://www.finlab.tw/tags/%E5%A4%96%E8%B3%87/"/>
    
      <category term="技術指標" scheme="https://www.finlab.tw/tags/%E6%8A%80%E8%A1%93%E6%8C%87%E6%A8%99/"/>
    
      <category term="指標" scheme="https://www.finlab.tw/tags/%E6%8C%87%E6%A8%99/"/>
    
      <category term="財經Python教學" scheme="https://www.finlab.tw/tags/%E8%B2%A1%E7%B6%93Python%E6%95%99%E5%AD%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python：外資買入成本選股</title>
    <link href="https://www.finlab.tw/python%EF%BC%9A%E8%A8%88%E7%AE%97%E5%A4%96%E8%B3%87%E8%B2%B7%E5%85%A5%E6%88%90%E6%9C%AC/"/>
    <id>https://www.finlab.tw/python：計算外資買入成本/</id>
    <published>2018-07-07T15:59:32.000Z</published>
    <updated>2018-08-13T08:36:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>上次已經介紹了如何爬取外資爬蟲～這次我們就用三大法人來製作指標！<br>自己做指標的好處是，數字都可以客製化，也可以搭配其它不同的指標進行選股和回測喔！<br>這次我們要做的指標是「外資買入成本」！</p><center><img src="/python：計算外資買入成本/Picture1.png" title="外資成本線 - 一窺外資的底牌！"></center><h3 id="計算指標前，先整理好財務數據"><a href="#計算指標前，先整理好財務數據" class="headerlink" title="計算指標前，先整理好財務數據"></a>計算指標前，先整理好財務數據</h3><p>(沒上課程的請看這邊，上了課的可以跳過看下一段)</p><p>在計算外資買入成本前，我們必須要或得兩個 DataFrame：</p><ol><li>「收盤價」</li><li>「外資買入張數」</li></ol><p>這兩個 <code>DataFrame</code>，其 <code>columns</code> 是股票的代號，而 <code>index</code>是每天的日期，<br>這兩個 <code>DataFrame</code> 要怎麼做出來呢？</p><p>首先，可以參考之前的文章，學習爬取股價跟三大法人：</p><ol><li><a href="https://www.finlab.tw/超簡單台股每日爬蟲教學/">爬取股價資訊</a></li><li><a href="https://www.finlab.tw/三大法人爬蟲/">爬取三大法人買賣超</a></li></ol><p>接下來，我們可以將這先每天都有的資料轉換成時間序列的 DataFrame：<br><a href="https://www.finlab.tw/Python-時間序列實作！/">時間序列實做</a><br>以上這篇文章只有教您怎麼整理「收盤價」，沒有教您怎麼整理「三大法人買賣資訊喔！」<br>但原理都是一樣的，所以就依法炮製可以做出「三大法人」的<code>DataFrame</code>喔！</p><h3 id="好麻煩喔！有沒有更快的方式？-利用課堂的工具"><a href="#好麻煩喔！有沒有更快的方式？-利用課堂的工具" class="headerlink" title="好麻煩喔！有沒有更快的方式？(利用課堂的工具)"></a>好麻煩喔！有沒有更快的方式？(利用課堂的工具)</h3><p>假如您有上<a href="https://hahow.in/cr/python-finance" rel="external nofollow noopener noreferrer" target="_blank">課程</a>的話，利用 <a href="https://www.finlab.tw/三大法人爬蟲/">爬取三大法人買賣超</a> 這篇文章，<br>就可以將三大法人買賣超的資訊整理好喔！</p><p>所以您用我們課程中的code，只需要額外增加：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> finlab.data <span class="keyword">import</span> Data</span><br><span class="line">data = Data()</span><br></pre></td></tr></table></figure></p><p>以上的code就是一個可以跟資料庫索取資料的物件，接下來只要把資料讀進來就可以了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 外資買入（2017-12月後的格式）</span></span><br><span class="line">陸資買進 = data.get(<span class="string">'外陸資買進股數(不含外資自營商)'</span>, <span class="number">250</span>)</span><br><span class="line">外資買進 = data.get(<span class="string">'外資自營商買進股數'</span>, <span class="number">250</span>)</span><br><span class="line"></span><br><span class="line">外資買進 += 陸資買進</span><br><span class="line"></span><br><span class="line"><span class="comment"># 外資買入（2017~12月前的格式）</span></span><br><span class="line">外資買進.fillna(data.get(<span class="string">'外資買進股數'</span>, <span class="number">250</span>))</span><br></pre></td></tr></table></figure><center><img src="/python：計算外資買入成本/buy.png" title="外資買進成本 DataFrame"></center><p>這樣就可以，直接得到dataframe囉！<br>賣出也是依法炮製：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 外資賣出（2017-12月後的格式）</span></span><br><span class="line">陸資賣出 = data.get(<span class="string">'外陸資賣出股數(不含外資自營商)'</span>, <span class="number">250</span>)</span><br><span class="line">外資賣出 = data.get(<span class="string">'外資自營商賣出股數'</span>, <span class="number">250</span>)</span><br><span class="line"></span><br><span class="line">外資賣出 += 陸資賣出</span><br><span class="line"></span><br><span class="line"><span class="comment"># 外資賣出（2017~12月前的格式）</span></span><br><span class="line">外資賣出.fillna(data.get(<span class="string">'外資賣出股數'</span>, <span class="number">250</span>))</span><br></pre></td></tr></table></figure><center><img src="/python：計算外資買入成本/sell.png" title="外資賣出成本 DataFrame"></center><p>然後是收盤價：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 收盤價</span></span><br><span class="line">收盤價 = data.get(<span class="string">'收盤價'</span>, <span class="number">250</span>)</span><br></pre></td></tr></table></figure><h3 id="接下來我們就可以來計算指標了，首先：外資買入成本"><a href="#接下來我們就可以來計算指標了，首先：外資買入成本" class="headerlink" title="接下來我們就可以來計算指標了，首先：外資買入成本"></a>接下來我們就可以來計算指標了，首先：外資買入成本</h3><p>其實這一步驟是最簡單的XD<br>最重要的只有兩個 <code>function</code> ：</p><ol><li>DataFrame 乘法：DataFrame的乘法很聰明，會將一樣的column name 跟 index 對應到的數字相乘，所以我們可以直接寫 <code>外資買入 * 收盤價</code> 這樣子的語法</li><li>df.rolling(60).mean()：就是時間窗格，例如今天的值，會變成過去60天的值的加總，每一天都如此計算。</li></ol><p>所以就有以下的code：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">外資買進成本 = (外資買進 * 收盤價).rolling(<span class="number">60</span>, min_periods=<span class="number">1</span>).sum() / 外資買進.rolling(<span class="number">60</span>, min_periods=<span class="number">1</span>).sum()</span><br></pre></td></tr></table></figure><p>就這樣算完了，但是有時候我們防止 <code>DataFrame</code> 裡面有 <code>NaN</code> ，我們希望就算有 <code>NaN</code> 也能算出值，就可以寫成：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">外資買進成本 = (外資買進 * 收盤價).rolling(<span class="number">60</span>, min_periods=<span class="number">1</span>).sum() / 外資買進.rolling(<span class="number">60</span>, min_periods=<span class="number">1</span>).sum()</span><br></pre></td></tr></table></figure><p>當中的 <code>min_period=1</code> 代表60天中，只需要有一天不是 <code>NaN</code>，就可以將不是 <code>NaN</code> 的數字取平均喔！<br>所以這樣寫會是比較建議的。</p><p>這邊要注意的是，我們不只算了單一一檔股票，是把所有股票的外資買進成本都算出來囉！</p><h3 id="外資賣出成本"><a href="#外資賣出成本" class="headerlink" title="外資賣出成本"></a>外資賣出成本</h3><p>這邊一模一樣，所以就直接放code：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">外資賣出成本 = (外資賣出 * 收盤價).rolling(<span class="number">60</span>, min_periods=<span class="number">1</span>).sum() / 外資賣出.rolling(<span class="number">60</span>, min_periods=<span class="number">1</span>).sum()</span><br></pre></td></tr></table></figure><h3 id="畫出曲線"><a href="#畫出曲線" class="headerlink" title="畫出曲線"></a>畫出曲線</h3><p>我們可以將 買入、賣出 的成本都畫出來：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">收盤價[<span class="string">'1101'</span>].plot()</span><br><span class="line">外資買進成本[<span class="string">'1101'</span>].plot(color=<span class="string">'red'</span>)</span><br><span class="line">外資賣出成本[<span class="string">'1101'</span>].plot(color=<span class="string">'blue'</span>)</span><br></pre></td></tr></table></figure></p><center><img src="/python：計算外資買入成本/eq.png" title="外資買賣成本 DataFrame"></center><p>紅色的線就是外資的買進成本<br>藍色的就是賣出成本</p><p>當買進成本高於賣出成本時，就是可以考慮買進的時機喔！<br>或是當股價上漲後，拉回到買進成本線，也是很好的買點喔！<br>大家可以試著回測看看～～</p><h3 id="選股"><a href="#選股" class="headerlink" title="選股"></a>選股</h3><p>我們也可以選擇股價小於外資成本的股票清單：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cond1 = 收盤價.iloc[<span class="number">-1</span>] &lt; 外資買進成本.iloc[<span class="number">-1</span>]</span><br><span class="line">print(cond1[cond1])</span><br></pre></td></tr></table></figure></p><p>這樣就可以看到所有股價小於外資成本的股票囉！<br>方便您繼續追蹤，看這些股票有沒有突破外資成本，一飛沖天喔！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;上次已經介紹了如何爬取外資爬蟲～這次我們就用三大法人來製作指標！&lt;br&gt;自己做指標的好處是，數字都可以客製化，也可以搭配其它不同的指標進行選股和回測喔！&lt;br&gt;這次我們要做的指標是「外資買入成本」！&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;/python：計算外資買入成
      
    
    </summary>
    
      <category term="財經Python教學" scheme="https://www.finlab.tw/categories/%E8%B2%A1%E7%B6%93Python%E6%95%99%E5%AD%B8/"/>
    
    
      <category term="外資" scheme="https://www.finlab.tw/tags/%E5%A4%96%E8%B3%87/"/>
    
      <category term="技術指標" scheme="https://www.finlab.tw/tags/%E6%8A%80%E8%A1%93%E6%8C%87%E6%A8%99/"/>
    
  </entry>
  
  <entry>
    <title>三大法人爬蟲</title>
    <link href="https://www.finlab.tw/%E4%B8%89%E5%A4%A7%E6%B3%95%E4%BA%BA%E7%88%AC%E8%9F%B2/"/>
    <id>https://www.finlab.tw/三大法人爬蟲/</id>
    <published>2018-07-02T15:59:30.000Z</published>
    <updated>2018-11-29T17:08:19.561Z</updated>
    
    <content type="html"><![CDATA[<p>三大法人是台灣獨有的資料，每一檔股票每天都會公佈，非常實用！<br>之前也有介紹<a href="/投信跟盤法！/">利用「投信買賣超」來交易的策略</a>，相信如有看到並使用過的人，就知道它的威力！</p><center><img src="/三大法人爬蟲/thumbnail.jpeg" title="來寫程式囉！"></center><p>三大法人買賣超還有很多種用法，我們之後再一一說明，<br>今天最主要就是先獲取到「三大法人」的資料！之後呢，我們會利用這個財經資料<br>來建立一個投信買賣超的簡單策略。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> StringIO</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">date = <span class="string">'20180102'</span></span><br><span class="line">r = requests.get(<span class="string">'http://www.tse.com.tw/fund/T86?response=csv&amp;date='</span>+date+<span class="string">'&amp;selectType=ALLBUT0999'</span>)<span class="comment">#</span></span><br><span class="line">df = pd.read_csv(StringIO(r.text), header=<span class="number">1</span>).dropna(how=<span class="string">'all'</span>, axis=<span class="number">1</span>).dropna(how=<span class="string">'any'</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><center><img src="/三大法人爬蟲/df.png" title="2018/01/02當天的三大法人買賣超明細"></center><p>什麼！這樣就爬好了～！對呀～那請問怎麼把他們都存在資料庫中呢？<br>假如您有上課程的話，可以結合我們寫好的GUI外掛可以用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># finlab 軟體包要上課才有喔～</span></span><br><span class="line"><span class="keyword">from</span> finlab.crawler <span class="keyword">import</span> widget, date_range</span><br><span class="line"></span><br><span class="line"><span class="comment"># 讀入一些package</span></span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> StringIO</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 爬取資料</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crawl_legal_person</span><span class="params">(date)</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 將時間物件變成字串：'20180102'</span></span><br><span class="line">    datestr = date.strftime(<span class="string">'%Y%m%d'</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 下載三大法人資料</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(<span class="string">'http://www.tse.com.tw/fund/T86?response=csv&amp;date='</span>+datestr+<span class="string">'&amp;selectType=ALLBUT0999'</span>)<span class="comment">#</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 製作三大法人的DataFrame</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        df = pd.read_csv(StringIO(r.text), header=<span class="number">1</span>).dropna(how=<span class="string">'all'</span>, axis=<span class="number">1</span>).dropna(how=<span class="string">'any'</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 微調整（為了配合資料庫的格式）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 刪除逗點</span></span><br><span class="line">    df = df.astype(str).apply(<span class="keyword">lambda</span> s: s.str.replace(<span class="string">','</span>,<span class="string">''</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 刪除「證券代號」中的「"」和「=」</span></span><br><span class="line">    df[<span class="string">'stock_id'</span>] = df[<span class="string">'證券代號'</span>].str.replace(<span class="string">'='</span>,<span class="string">''</span>).str.replace(<span class="string">'"'</span>,<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 刪除「證券代號」這個欄位</span></span><br><span class="line">    df = df.drop([<span class="string">'證券代號'</span>], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 設定index</span></span><br><span class="line">    df[<span class="string">'date'</span>] = date</span><br><span class="line">    df = df.set_index([<span class="string">'stock_id'</span>, <span class="string">'date'</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 將dataframe的型態轉成數字</span></span><br><span class="line">    <span class="keyword">return</span> df.apply(<span class="keyword">lambda</span> s: pd.to_numeric(s, errors=<span class="string">'coerce'</span>)).dropna(how=<span class="string">'all'</span>, axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打開資料庫</span></span><br><span class="line">conn = sqlite3.connect(os.path.join(<span class="string">'data'</span>, <span class="string">'data.db'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 開啟GUI介面</span></span><br><span class="line">widget(conn, <span class="string">'legal_person'</span>, crawl_legal_person, date_range)</span><br></pre></td></tr></table></figure><center><img src="/三大法人爬蟲/gui.png" title="三大法人爬蟲+GUI資料更新系統"></center><p>才多加幾行，我們就將GUI的插件給寫好了～<br>可以調整時間範圍，來下載每天的三大法人買賣超，並且存在資料庫裡面～<br>下一次我們就來實做三大法人的策略囉！敬請期待～！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;三大法人是台灣獨有的資料，每一檔股票每天都會公佈，非常實用！&lt;br&gt;之前也有介紹&lt;a href=&quot;/投信跟盤法！/&quot;&gt;利用「投信買賣超」來交易的策略&lt;/a&gt;，相信如有看到並使用過的人，就知道它的威力！&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;/三大法人爬蟲/thumbn
      
    
    </summary>
    
      <category term="財經Python教學" scheme="https://www.finlab.tw/categories/%E8%B2%A1%E7%B6%93Python%E6%95%99%E5%AD%B8/"/>
    
    
      <category term="python" scheme="https://www.finlab.tw/tags/python/"/>
    
      <category term="程式交易" scheme="https://www.finlab.tw/tags/%E7%A8%8B%E5%BC%8F%E4%BA%A4%E6%98%93/"/>
    
      <category term="爬蟲" scheme="https://www.finlab.tw/tags/%E7%88%AC%E8%9F%B2/"/>
    
  </entry>
  
  <entry>
    <title>如何判斷投資理財課程的好壞？</title>
    <link href="https://www.finlab.tw/%E6%8A%95%E8%B3%87%E7%90%86%E8%B2%A1%E8%AA%B2%E7%A8%8B%E7%9A%84%E5%A5%BD%E5%A3%9E/"/>
    <id>https://www.finlab.tw/投資理財課程的好壞/</id>
    <published>2018-07-01T15:59:30.000Z</published>
    <updated>2018-07-02T12:13:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近大家在討論，投資到底該買哪些書？該相信哪些老師？<br>投資課程應該要多少錢？師資應該要有多久才夠格？<br>對於量化策略的學派來說，根本沒有這些問題，為什麼這樣說呢？以下一一為您說明</p><center><img src="/投資理財課程的好壞/thumbnail.jpeg"></center><h3 id="該買哪些書"><a href="#該買哪些書" class="headerlink" title="該買哪些書"></a>該買哪些書</h3><p>書一本的價格，比上課程還要划算很多，<br>增廣見聞沒什麼不好，付一點小錢，但獲得整本知識，採到雷不心疼（相較於課程）！</p><p>但是呀～我得說網路上就已經有很多很棒的免費資源了，看書之前，<br>去翻一翻網站，研究一下，說不定也有很不錯的收穫<br>例如「TEJ」這個策略庫，裡面就將近百種策略任均挑選，根本來不及買書呀！</p><p>買書也好，上網看也很不錯，但重點在於自己要有辨別策略的能力！</p><h3 id="該相信哪些老師"><a href="#該相信哪些老師" class="headerlink" title="該相信哪些老師"></a>該相信哪些老師</h3><p>對於量化策略這個學門來說，我們不相信老師，只相信策略！<br>經過長久驗證的策略，用歷史回測，這種最客觀的方式，<br>來檢驗一堂課程、一個老師是否值得你相信，</p><p>為何我們不相信老師？因為就算您真的很幸運，遇到很有實力的老師，<br>他能夠辨別產業狀況，個股之間的優勢，但有辦法完全複製這個老師的能力嗎？<br>我個人是持保留得態度，<br>假如不能複製他的能力，那就只能聽他的意見買賣股票，就變成單純老師說什麼買什麼，<br>得一輩子付費上課才行，沒辦法獨立。</p><p>所以該怎麼辦才好？</p><h3 id="不要相信老師，相信你的代碼和策略吧！"><a href="#不要相信老師，相信你的代碼和策略吧！" class="headerlink" title="不要相信老師，相信你的代碼和策略吧！"></a>不要相信老師，相信你的代碼和策略吧！</h3><p>量化策略的好處是，你可以完全的複製和累積經驗！<br>做研究也非常爽，每一次回測就可以抵過別人實戰多年的經驗<br>這個月研究「技術指標」成為技術指標高手<br>下個月研究「三大法人」成為籌碼高手<br>再花半年研究一下「基本面」成為偽價值型投資人XD</p><p>每一次回測都獲得很多經驗，知道哪些指標該怎麼用，能夠長期獲利！<br>最重要的好處是不用實彈演練，將 $ 投入茫茫大海，就已經學習到買股票的經驗了～</p><p>我最近開了堂課程，也變成大家口中的「老師」了…XD<br>但在此堂課程中，你可以完全不用相信我，相信歷史績效和程式碼就可以了！<br>課程中，我們教您所有的代碼、也教你怎麼從無到有建構一個策略，<br>程式碼是無情的，絕對公正，就像是照妖鏡一樣！<br>好的策略一一現形，壞的策略一網打盡～</p><h3 id="歷史回測績效，比對帳單好"><a href="#歷史回測績效，比對帳單好" class="headerlink" title="歷史回測績效，比對帳單好"></a>歷史回測績效，比對帳單好</h3><p>量化投資中，我們會模擬策略在過去幾年的歷史績效，<br>歷史績效是更有效的對帳單！為什麼這麼說？<br>首先，你怎麼知道所謂的「老師」總共有幾個投資帳戶？<br>說不定對帳單都拿會賺的，賠的都沒秀出來，尤其是多空都包含的策略，超容易做對帳單<br>首先，只要一個帳戶看多，一個帳戶看空，最後看哪個賺得多，就秀哪個就可以了…</p><p>有歷史績效，每一筆交易都是清清楚楚，沒有含糊的餘地，<br>每一個策略買賣時機也非常明確，不會有事後諸葛的嫌疑～<br>我們的課程中，甚至回測程式碼都給你了，<br>當中大部分的code上課都有教，直接毫無作假寫給你看！<br>假如有問題早就被抓出來，歷史績效是經的起考驗的！</p><p>所以我也請大家不用相信我，相信你自己跟code吧～</p><h3 id="投資課程究竟該便宜該貴"><a href="#投資課程究竟該便宜該貴" class="headerlink" title="投資課程究竟該便宜該貴"></a>投資課程究竟該便宜該貴</h3><p>投資課程也算是一種商品，例如手機好了，有人喜歡買「iphone」，但買「小米」手機的人也不少，課程定價本來就可以很浮動，重點是要「超值」！</p><p>例如我開的「python投資：小資族選股策略」，就是走「小米」發燒友路線<br>強調「動手做實驗」的精神，並且買一次終身受用。<br>當然「發燒友」的意思就是，必須要有「研究精神」的人來學習會比較好，<br>課程中比較沒有華麗的GUI介面，有的是很紮實的選股程式碼，<br>還附上了一個策略並且實際驗證給大家看，策略的有效程度！</p><p>我個人覺得滿超值的！尤其是對有研究精神的人～</p><p>一般非量化課程問題在於，你只能相信老師說得話，但無法驗證他說的是否正確，<br>也見過很多策略，理論可行，論述有理，但回測起來績效不好，</p><p>更可怕的是<br>之前看過一個直播，講師的策略簡單，歷史績效超好，曲線超美！<br>但詭異的地方是我無論怎麼做，就是完全無法還原他的績效…<br>可能我資質愚鈍吧XD</p><p>以上的例子就是在說：你以為「超值」的課程，最後有可能沒那麼「超值」<br>在這種情況下，比起一開始買5萬塊的課程，我覺得先從3000左右價位的課程開始嘗試，也不失是個好主意呀！以成本來說</p><ul><li>五萬塊的課程：相當於50萬要獲利10％才能回本</li><li>三千塊的課程：相當於30萬只要獲利1％就能回本</li></ul><p>以上的例子就可以發現，考量到自己的投資總額，也是非常重要的喔！<br>最近3千這個價位的課程也越來越多了，這是個好現象！讓大家以比較低的成本，學到有用的知識！</p><h3 id="為何這堂課程這麼便宜"><a href="#為何這堂課程這麼便宜" class="headerlink" title="為何這堂課程這麼便宜"></a>為何這堂課程這麼便宜</h3><p>這堂課程目前真的是破盤價，其中包含一個永久可以使用的回測框架<br>還有其代碼，這些程式碼一般在外販售絕對是更貴的價格！<br>為什麼我們可以賣這麼便宜？</p><p>我們開這堂課的初衷就是：「希望將量化投資帶入平常百姓家」<br>在課堂中，幾乎毫無保留，把所有的程式碼都教了，盡力做到完整！<br>因為我們希望「大家上完這堂課，能夠獨立做財經研究，往財富自由的路上邁進」<br>投資不應被高價課程或軟體壟斷，我們想讓大家用最少的成本，換取最大的福利，</p><p>而且我們不擔心全部教完，大家學會就跑走了～<br>反而就是希望你再也不用依靠任何人、任何軟體，也不用再來上我的課，<br>可以自行研究投資這門學問，對自己的獲利負責～<br>我們希望越來越多人利用量化投資獲得穩定合理的報酬！<br>對於改善台灣的投資環境盡一份心力。</p><p>FinLab的課程之所以可以橫空出世，闖出一片天，<br>其實反映出台灣股票軟體高昂、財經資訊較封閉的缺點，<br>投資界的「iphone」已經夠多了，我們就來當超高CP值的「小米」吧！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近大家在討論，投資到底該買哪些書？該相信哪些老師？&lt;br&gt;投資課程應該要多少錢？師資應該要有多久才夠格？&lt;br&gt;對於量化策略的學派來說，根本沒有這些問題，為什麼這樣說呢？以下一一為您說明&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;/投資理財課程的好壞/thumbnail
      
    
    </summary>
    
    
      <category term="如何投資" scheme="https://www.finlab.tw/tags/%E5%A6%82%E4%BD%95%E6%8A%95%E8%B3%87/"/>
    
  </entry>
  
  <entry>
    <title>為何時間管理總是失敗？</title>
    <link href="https://www.finlab.tw/%E7%82%BA%E4%BD%95%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86%E7%B8%BD%E6%98%AF%E5%A4%B1%E6%95%97%EF%BC%9F/"/>
    <id>https://www.finlab.tw/為何時間管理總是失敗？/</id>
    <published>2018-06-17T12:01:51.000Z</published>
    <updated>2018-06-17T12:02:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>時間總是不夠用？看了很多時間管理大師講述的方法但時間還是管理得很差？透過這篇戳破你的時間管理思維誤區！<br><img src="https://cdn-images-1.medium.com/max/2000/0*m4-NRC7Kurt-Q_LK" alt=""><br><a id="more"></a><br>你一定有看過下面這張圖<br><img src="https://cdn-images-1.medium.com/max/3096/1*ANaqf-_bRQDmLwrfRE9aEQ.png" alt=""></p><p>此圖是由美國的管理大師科維提出的時間管理理論，主要想帶出的概念是</p><ol><li><p>我們的事情可以依照『緊急』及『重要性』分類為四象限</p></li><li><p>我們常常先做『不緊急不重要』or『緊急不重要』的事情在瞎忙</p></li><li><p>要想管理時間，除了緊急且重要的事情外，我們應該更優先做重要且不緊急的事</p></li></ol><p>概念聽起來很對，但你有沒有想過，知道這個概念後對你的人生有什麼改變呢？就我自己來說，在不知道這個概念前還好，知道這個概念後我的<strong>時間管理技巧反而變得更差了</strong>！為什麼呢？因為有些事情不是那麼容易被分成重要還是不重要的，知道這個概念後除了要判斷某件事屬於哪個象限外，還額外造成了不必要的心理負擔</p><blockquote><h1 id="優先做重要且不緊急的事情的時候"><a href="#優先做重要且不緊急的事情的時候" class="headerlink" title="優先做重要且不緊急的事情的時候"></a>優先做重要且不緊急的事情的時候</h1><h1 id="反而會擔憂緊急不重要的事還沒做！"><a href="#反而會擔憂緊急不重要的事還沒做！" class="headerlink" title="反而會擔憂緊急不重要的事還沒做！"></a>反而會擔憂緊急不重要的事還沒做！</h1></blockquote><p>問了我身邊的朋友與前輩們發現大家都被“知道”這個概念所苦惱！知道這個理論後最可怕的是在做”緊急但不重要”的事的時候，會擔憂重要的事情都晾一邊沒進度，一來一往分心擔憂最後反而總體效率更差了！因為不管你在做哪個象限的事情，都多了來自其他象限尚未執行的心理壓力成本</p><blockquote><p><strong>盲目知道四象限理論，反而會被四象限困住甚至引發選擇困難症,</strong><br><strong>最終心煩意亂乾脆什麼都不做</strong></p></blockquote><p>患得患失，是我覺得對於知道這個理論後最為悲劇的下場</p><blockquote><p><strong>我很不幸地知道這個理論了，也深有同感覺得時間管理變得更差了，有沒有什麼解決辦法？</strong></p></blockquote><p>有！絕對有！首先我想說的是，想要控制這四象限裡面做事的順序，就我個人來說，我覺得根本是騙人的，考慮人性及心理因素，上面的四象限做事順序大多時候你根本就無法控制，理由如下</p><h2 id="1-對於重要且緊急的事"><a href="#1-對於重要且緊急的事" class="headerlink" title="1.對於重要且緊急的事"></a>1.對於重要且緊急的事</h2><ul><li>例如明天突然就是死線要交給老闆產品企劃書這種事，其實根本不用特意安排，也不用談什麼時間管理，<strong>你自然會最優先去做</strong>，因為你知道沒做成<strong>你就死定了</strong>！年底考績分紅直接byebye甚至整個人黑掉被老闆討厭！</li></ul><h2 id="2-緊急但是不重要的事"><a href="#2-緊急但是不重要的事" class="headerlink" title="2.緊急但是不重要的事"></a>2.緊急但是不重要的事</h2><ul><li>這類事很常出現，大部分是來自於第三方的催促或是人情壓力（例如同事跟你催要資料、年底週年慶大拍賣快要結束等等）雖然這些事不重要，但你不趕快做完心理會有很大的壓力，因為它是如此的緊急，所以你會遲遲放不下心，甚至影響到你做其他事情的效率。</li></ul><h2 id="3-不緊急不重要"><a href="#3-不緊急不重要" class="headerlink" title="3.不緊急不重要"></a>3.不緊急不重要</h2><ul><li>這類事情是最弔詭、最可怕也是最常發生的，明明超級不重要但是執行力超級驚人，想一下你看到好看的劇會忍不住看幾集？肯定是好幾集甚至一整季對吧？上網購物時你真有辦法控制自己在一定的時間內完成而不會不小心被其他商品吸引而逛了更多時間？『<strong>不重要但是執行力超級驚人』</strong>是此類事情最可怕的特徵！我個人認為『不緊急不重要』的執行力強大程度僅次於『重要且緊急』，你根本不用特別安排時間也會自動去做，因為大多都是娛樂事項，做的很開心不用動腦，刻意抵抗不去做反而很費力！</li></ul><h2 id="4-重要但是不緊急"><a href="#4-重要但是不緊急" class="headerlink" title="4.重要但是不緊急"></a>4.重要但是不緊急</h2><ul><li>例如像是明年的畢業論文、期中考、產品企劃案等等，這個類別的共通特性是通常你會覺得時間還很久，沒關係，我可以慢慢來<strong>，</strong>明天再說好了..但等你意識到來不及的時候通常已經為時已晚！『<strong>覺得時間很長慢慢來最終導致執行力低落』</strong>是此類事件共同的特徵。</li></ul><blockquote><p><strong>講了這麼多，既然四象限時間管理法沒用，那時間到底要怎麼管？</strong></p></blockquote><p>經過我的血淚慘痛教訓，對於時間管理只要掌握四個字『化繁為簡』</p><p>  從今天開始對於時間管理沒有四象限，就只有兩象限，分別為『自動導航模式』＆『重要卻不緊急的事』，自動導航模式就是憑你的原始直覺，想做就去做，但是當你想要刻意去安排時間的時候，請<strong>一律無腦直接做重要且不緊急的事，</strong>不要再想那麼多了！為什麼呢？</p><ul><li><p>對於『緊急重要的事』若真的很緊急重要，光想到沒完成所帶來的可怕災難，不用特別想你就會去做了，哪需要安排時間？先完成它就是一切，你一定會自動擺在第一位去完成它！</p></li><li><p>對於『緊急但不重要的事』，你都還有餘力去考慮安排事情的優先順序，代表那些緊急的事對你來說都還<strong>存在足夠的時間去完成它，</strong>別怕！讓子彈再飛一會兒，等最後死線到了再去做就好，反正它不重要，有時逼進死線去做反而更能聚精會神，花費時間更短效率更高！</p></li><li><p>對於『不重要不緊急的事』，這是個人慾望及注意力管控問題，會再開另一篇文章專門探討並介紹關於注意力渙散如何拉回的小技巧。</p></li></ul><p>以上是我對於時間管理慘痛的教訓及經驗分享，你也跟我一樣是被這個理論深受其害的人嗎？還是說這個所謂四象限理論對你來說真的有幫助？不要吝嗇！一起留言分享你的看法！！</p><p><img src="https://cdn-images-1.medium.com/max/3532/0*-qnzKIMhW2RIBYu-" alt=""></p><p>Note.本文同步更新於Medium,歡迎follow</p><p><a href="https://medium.com/@master7x21/" rel="external nofollow noopener noreferrer" target="_blank">https://medium.com/@master7x21/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;時間總是不夠用？看了很多時間管理大師講述的方法但時間還是管理得很差？透過這篇戳破你的時間管理思維誤區！&lt;br&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2000/0*m4-NRC7Kurt-Q_LK&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="生產力" scheme="https://www.finlab.tw/categories/%E7%94%9F%E7%94%A2%E5%8A%9B/"/>
    
    
      <category term="生產力" scheme="https://www.finlab.tw/tags/%E7%94%9F%E7%94%A2%E5%8A%9B/"/>
    
      <category term="個人優化" scheme="https://www.finlab.tw/tags/%E5%80%8B%E4%BA%BA%E5%84%AA%E5%8C%96/"/>
    
      <category term="時間管理" scheme="https://www.finlab.tw/tags/%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>回測績效檢討</title>
    <link href="https://www.finlab.tw/%E5%9B%9E%E6%B8%AC%E7%B8%BE%E6%95%88%E6%AA%A2%E8%A8%8E/"/>
    <id>https://www.finlab.tw/回測績效檢討/</id>
    <published>2018-06-14T11:24:11.000Z</published>
    <updated>2018-06-14T14:21:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>因為你的疏忽，錯過了遇見聖杯的機會！回測的時候，究竟要注意哪些重點？發現策略效果不好，要怎麼優化呢？<br><a id="more"></a></p><center><img src="/回測績效檢討/eq2.png" title="第二次回測（同策略不同時間段）"></center><p>跟長期關注blog的朋友們說聲抱歉，最近真的有點久沒更新了！<br>我想說先把Hahow上的課程照顧好，所以之前的心力都在上面，<br>不過目前課程代碼已經穩定許多，問題變少<br>終於有時間來寫寫blog了！</p><h3 id="一個有趣的問題"><a href="#一個有趣的問題" class="headerlink" title="一個有趣的問題"></a>一個有趣的問題</h3><p>有同學於論壇中問我，為何他的策略，差幾天選股，回測跑出來差這麼多？<br>請大家先看數據，從數據中找出原因吧！看你想的跟我想的是不是一樣的！</p><p>以下是策略一的獲利狀況</p><table><thead><tr><th>其間</th><th>報酬率(%)</th><th>股票檔數</th></tr></thead><tbody><tr><td>2017-06-11 - 2017-08-10</td><td>-0.88</td><td>15</td></tr><tr><td>2017-08-10 - 2017-10-09</td><td>+9.06</td><td>6</td></tr><tr><td>2017-10-09 - 2017-12-08</td><td>+8.84</td><td>10</td></tr><tr><td>2017-12-08 - 2018-02-06</td><td>-10.43</td><td>8</td></tr><tr><td>2018-02-06 - 2018-04-07</td><td>-13.09</td><td>1</td></tr><tr><td>2018-04-07 - 2018-06-06</td><td>+14.84</td><td>13</td></tr><tr><td>2018-06-06 - 2018-08-05</td><td>+0.03</td><td>13</td></tr></tbody></table><center><img src="/回測績效檢討/eq1.png" title="第一次回測"></center><p>看起來不是非常理想，但同學做了一點點的修改，<br>把起始日期從原本的 <code>2017/6/11</code> 換成 <code>2017/6/1</code> 號，<br>結果變成了超好的策略：</p><table><thead><tr><th>其間</th><th>報酬率(%)</th><th>股票檔數</th></tr></thead><tbody><tr><td>2017-06-01 - 2017-07-31</td><td>-2.36</td><td>20</td></tr><tr><td>2017-07-31 - 2017-09-29</td><td>8.76</td><td>7</td></tr><tr><td>2017-09-29 - 2017-11-28</td><td>17.26</td><td>6</td></tr><tr><td>2017-11-28 - 2018-01-27</td><td>3.04</td><td>15</td></tr><tr><td>2018-01-27 - 2018-03-28</td><td>8.21</td><td>9</td></tr><tr><td>2018-03-28 - 2018-05-27</td><td>5.45</td><td>16</td></tr><tr><td>2018-05-27 - 2018-07-26</td><td>4.07</td><td>6</td></tr></tbody></table><center><img src="/回測績效檢討/eq2.png" title="第二次回測（同策略不同時間段）"></center><p>回測才相隔十天，並且適用同一個選股策略，<br>究竟什麼造成了如此大的差異呢？<br>大家先不要看我的答案，看看能不能用上面的數據，自己找出原因吧！</p><h3 id="——公佈答案——"><a href="#——公佈答案——" class="headerlink" title="——公佈答案——"></a>——公佈答案——</h3><p>同學最初覺得跟換股時間對報酬率有極大的影響，<br>但追根究底的原因，其實是「股票檔數」對於報酬率影響很大！</p><p>我們就第一張圖進行檢討，<br>其實仔細看的話，<br>會發現其實每個時間段表現，除了紫色（2/6～4/7），其它時間都有穩定上升<br>代表策略能夠發揮功效</p><p>那圖1紫色時間段的問題再哪？<br>其實最主要的原因，紫色的時間區見內（2018-02-06 - 2018-04-07）<br>策略只選擇了一檔股票而已<br>沒有平均分散風險，造成毀滅性的虧損<br>解決的方法很簡單<br>就是讓策略每個時間段都選到一些股票，就不會有此問題了～</p><p>股票檔數是非常非常重要的一個數據！<br>它代表了策略的潛力～<br>例如策略每次都選了很多檔股票進行持有，而長期績效勝過大盤<br>代表這個策略非常有潛力！</p><p>我們課程上的「資優生策略」就算是非常有潛力的璞玉，一次會選出非常多檔股票<br>這些股票並不是拿來讓同學們直接買入，而是可以再進一步根據條件作篩選，選出數10～20檔股票！<br>不但股票檔數變少，績效也有可能上升！</p><p>策略製作最重要的關鍵就在於：股票檔數<br>假如條件太嚴苛，則可能導致選出太少檔股票，無法分散風險</p><p>我們課程中教的是以「條件來篩選」，例如 某某值大於多少 這樣子<br>有時候篩選不到股票，要預防這樣的問題，可以用以下的方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">condition1 = ...(課堂中的條件)</span><br><span class="line">condition2 = ...</span><br><span class="line">condition3 = ...</span><br><span class="line">...</span><br><span class="line">conditionn = ...</span><br></pre></td></tr></table></figure><p>以上是上課用程式寫出來的條件，或是可以添加一些自己的條件，利用這些條件，幫股票做評分：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">score = condition1 * <span class="number">1</span> + condition2 * <span class="number">1</span> + condition * <span class="number">1</span> ... + conditionn * <span class="number">1</span></span><br><span class="line">selected_stocks = score.nlargest(<span class="number">20</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>這邊的數字「1」都可以改成其它的權重，來代表該參數的重要性<br>這樣我們就可以很穩定的每次都選出20檔股票囉～</p><p>財報狗的選股清單就是用類似的方式選出來的～<br>有興趣的話可以試試看喔！<br>假如您沒有買課程的話也沒關係，概念上是一樣的喔～希望這篇文章能帶給您一些啟發～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因為你的疏忽，錯過了遇見聖杯的機會！回測的時候，究竟要注意哪些重點？發現策略效果不好，要怎麼優化呢？&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>你最該避開的三個疲勞陷阱！</title>
    <link href="https://www.finlab.tw/%E4%BD%A0%E6%9C%80%E8%A9%B2%E9%81%BF%E9%96%8B%E7%9A%84%E4%B8%89%E5%80%8B%E7%96%B2%E5%8B%9E%E9%99%B7%E9%98%B1%EF%BC%81/"/>
    <id>https://www.finlab.tw/你最該避開的三個疲勞陷阱！/</id>
    <published>2018-06-11T13:59:06.000Z</published>
    <updated>2018-06-11T14:15:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>有時總是感到莫名累？不是休息不夠，而是你掉入身體運作的機制的陷阱,<br>看完此篇讓你擺脫累累的自己!!<br><a id="more"></a></p><p><img src="https://cdn-images-1.medium.com/max/1600/1*idvZ98c6ofUpy7El_rE-cg.png" alt=""></p><p>不知道你有沒有這種經驗，也沒做什麼特別的事情，但就是覺得身體特別累?明明還沒開始工作卻總覺得渾身提不起勁？目標與截止日期血淋淋地擺在那，但無論如何就是調動不了全身的細胞去完成它?到底我們的心靈與身體發生了什麼事?是什麼環節的疏忽導致我們的身體如此頑劣，竟可不經主大腦同意就自動切換成疲勞模式呢?</p><blockquote><p>你只是不自覺做了一些非常耗神的事情而混不自知</p></blockquote><p>人一天百分之80的時間都處於自動導航模式，像是通勤上班、鎖門、買早餐等等，這些行為完全是自然反應，完全不用經過大腦特意處理就可以完成，同樣的在一件事要不要開始做之前，我們也很大程度交由大腦自動導航的模塊去做自動化決定，而某些事做了會特別疲憊但我們卻沒有特別的去意識到甚至去防備它，而這就是身體有時會感到莫名疲憊的原因。</p><p>就我的經驗，做某些事總會感到特別疲憊，這些事分別是</p><ul><li><p>短時間內不斷在不同工作間切換</p></li><li><p>辨別或安排某個項目</p></li><li><p>飲食攝取問題-咖啡戒斷帶來的注意力渙散</p></li></ul><h3 id="1-短時間不斷在不同工作間切換"><a href="#1-短時間不斷在不同工作間切換" class="headerlink" title="1.短時間不斷在不同工作間切換"></a>1.短時間不斷在不同工作間切換</h3><p>人是喜歡多工的動物，會讓自己有做很多事的快感，但多工時往往效率是最低的，而且還常常會因為掛念上一件任務，而讓當前任務出錯，關於這個問題我目前也沒找到非常好的方法，目前採用的戰術是計時25分鐘搭配便條紙的方式去抵抗干擾，詳細的步驟主要分為兩步</p><ul><li><p>Step1.決定要做一項事情後，25分鐘內全力衝刺</p></li><li><p>Step2.若中途有其他閃念或是想法干擾，立刻寫在便條紙上暫緩它做到隔離以維持專注。</p></li></ul><p>這個方法稱不上完美，有時某件詭異的小事儘管寫在紙上，仍還是會讓我莫名執著想要先去完成它~但我深知這件事根本他媽的超級不重要XD！（比如找到ＣＰ值最高的刮鬍刀這種超不重要的小事XD），但目前也還是先用這個方法頂著，盡量保持專注。</p><h3 id="2-辨別或安排某個項目"><a href="#2-辨別或安排某個項目" class="headerlink" title="2.辨別或安排某個項目"></a>2.辨別或安排某個項目</h3><p>改錯字、改BUG分析數據，安排出遊計畫等等，這些行為需要調動到腦中”觀察”和”比較”的功能，長時間下來特別容易讓人感到疲累，我個人的習慣會把這種事放在很後面才做甚至不要去做它。</p><h3 id="3-飲食攝取問題-咖啡戒斷帶來的注意力渙散"><a href="#3-飲食攝取問題-咖啡戒斷帶來的注意力渙散" class="headerlink" title="3.飲食攝取問題-咖啡戒斷帶來的注意力渙散"></a>3.飲食攝取問題-咖啡戒斷帶來的注意力渙散</h3><p>現代人最喜歡喝咖啡，喝咖啡可以帶來短暫提神的作用，但隨之而來的戒斷症狀是很可怕的，會讓你覺得情緒消極絕望，什麼都不想做，甚至讓你常常莫名感到疲憊！就我個人來說目前會採<strong>休一喝一</strong>的戰術，讓身體慢慢習慣低咖啡因甚至沒有咖啡因的日子，另外經過多次實驗我意外發現，喝完咖啡後戴眼罩在<strong>全黑環境</strong>下小睡<strong>20分鐘</strong>，可以讓咖啡帶來的提神效果維持得更久更好！</p><h3 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h3><blockquote><p><em>1.</em>人要避免疲憊應該極力避免做那些<em>會讓你耗神的事情</em><br>2.若真要做，請確定這件事的重要性配得上它讓你耗費的精力<br>3.適時透過一些閒談或是在完全黑暗小睡的小技巧休息，效率更高！</p></blockquote><p>你也是特別容易感到莫名累或是無力的人嗎?下次可以先試試停下來幾秒，評估要開工的這件事對你精神能量的耗損程度，若真的很重要當然可以二話不說立馬開幹，但若不太重要可以試著延後它的優先順序，你也有什麼抵抗疲憊的妙招嗎？歡迎大家踴躍分享！</p><p>Note.本文同步更新於Medium,歡迎follow</p><p><a href="https://medium.com/@master7x21/" rel="external nofollow noopener noreferrer" target="_blank">https://medium.com/@master7x21/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有時總是感到莫名累？不是休息不夠，而是你掉入身體運作的機制的陷阱,&lt;br&gt;看完此篇讓你擺脫累累的自己!!&lt;br&gt;
    
    </summary>
    
      <category term="生產力" scheme="https://www.finlab.tw/categories/%E7%94%9F%E7%94%A2%E5%8A%9B/"/>
    
    
      <category term="生產力" scheme="https://www.finlab.tw/tags/%E7%94%9F%E7%94%A2%E5%8A%9B/"/>
    
      <category term="個人優化" scheme="https://www.finlab.tw/tags/%E5%80%8B%E4%BA%BA%E5%84%AA%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>股票投資組合系列（一）</title>
    <link href="https://www.finlab.tw/%E8%82%A1%E7%A5%A8%E6%8A%95%E8%B3%87%E7%B5%84%E5%90%88%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://www.finlab.tw/股票投資組合系列（一）/</id>
    <published>2018-04-19T10:24:42.000Z</published>
    <updated>2018-04-20T03:11:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>這篇介紹多股票或是策略的配置方法，會以常見的方式加以說明，<br>並以用淺顯易懂的方式帶大家拆解複雜的公式，<br>期貨已經有很多人在用「多商品多策略」的方式在投資，<br>這邊的理論部分也是適用的，歡迎進來看看。</p><p>股票策略是比較難量化的，<br>因為股票要同時考慮財報、技術、籌碼面，光是要做出策略就已經不容易<br>甚至還要同時考慮多策略，並且配置資產！？真的很難<br>這篇就來介紹一下，比較宏觀的一些數學推演，<br>然後我手上的9個交易策略當作範例，來看看效果如何。</p><center><img src="/股票投資組合系列（一）/final.png" title="報酬率 vs 風險"></center><h3 id="報酬率模型"><a href="#報酬率模型" class="headerlink" title="報酬率模型"></a>報酬率模型</h3><p>我們用一個最簡單的模型，用數學寫起來就是這樣：<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mrow><mo>∗</mo></mrow></msup><mo>=</mo><msub><mo>∑</mo><mrow><mi>p</mi><mo>∈</mo><mrow><mi mathvariant="double-struck">P</mi></mrow></mrow></msub><msub><mi>r</mi><mrow><mi>p</mi></mrow></msub><msub><mi>w</mi><mrow><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">r^{*}=\sum_{p\in\mathbb{P}}r_{p}w_{p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.050005em;"></span><span class="strut bottom" style="height:2.484341em;vertical-align:-1.434336em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord">∗</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mop op-limits"><span class="vlist"><span style="top:1.198228em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">p</span><span class="mrel">∈</span><span class="mord scriptstyle cramped"><span class="mord mathbb">P</span></span></span></span></span><span style="top:-0.000005000000000032756em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">p</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02691em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">p</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></span><br>其中，<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">r^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.688696em;"></span><span class="strut bottom" style="height:0.688696em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord">∗</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 是報酬率（return）<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="double-struck">P</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbb{P}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68889em;"></span><span class="strut bottom" style="height:0.68889em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathbb">P</span></span></span></span></span> 是策略庫中的所有策略（portfolio）<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>r</mi><mrow><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">r_{p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">p</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 是 p 策略一段時間的報酬率<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mrow><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">w_{p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02691em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">p</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 是 p 策略一段時間的權重，也就是我們投資多少比例的資產於策略p<br>其中我們限定 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo><mrow><msub><mi>w</mi><mrow><mi>p</mi></mrow></msub></mrow><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\sum{w_{p}}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="mord textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02691em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">p</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span> ，<br>因為我們想以比例呈現，也就是一塊大餅分給不同的策略p的比例而已。</p><p>也可以把上述公式用向量表示：<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mrow><mo>∗</mo></mrow></msup><mo>(</mo><mrow><mi mathvariant="bold">w</mi></mrow><mo>)</mo><mo>=</mo><mrow><mi mathvariant="bold">r</mi></mrow><mo>⋅</mo><mrow><mi mathvariant="bold">w</mi></mrow></mrow><annotation encoding="application/x-tex">r^{*}(\mathbf{w})=\mathbf{r}\cdot\mathbf{w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord">∗</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord displaystyle textstyle uncramped"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mclose">)</span><span class="mrel">=</span><span class="mord displaystyle textstyle uncramped"><span class="mord mathbf">r</span></span><span class="mbin">⋅</span><span class="mord displaystyle textstyle uncramped"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span></span></span></span></span><br>這邊的小寫粗體w跟r就是代表向量的意思，<br>我們的目標就是找到一個 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="bold">w</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.44444em;"></span><span class="strut bottom" style="height:0.44444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span></span></span></span> 可以優化 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">r^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.688696em;"></span><span class="strut bottom" style="height:0.688696em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord">∗</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 變得比較大！<br>這邊講的「優化」，是建立在假設「未來的報酬率」會跟「歷史報酬率」<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">r^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.688696em;"></span><span class="strut bottom" style="height:0.688696em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord">∗</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 會是近似，<br>所以優化了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">r^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.688696em;"></span><span class="strut bottom" style="height:0.688696em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord">∗</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>就帶表優化了「未來的報酬率」（大部分都是這樣，但有些會不一樣）</p><p>但是這邊的「優化」不代表想要一味的最大化<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">r^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.688696em;"></span><span class="strut bottom" style="height:0.688696em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord">∗</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>，我們同時還希望風險降到最小！</p><h3 id="風險模型"><a href="#風險模型" class="headerlink" title="風險模型"></a>風險模型</h3><p>跟報酬率模型不一樣，風險可以有很多種模型，因為風險本身就很難定義XD<br>有人說風險要看最大跌幅，有些人說要看獲利曲線的震幅（標準差），<br>有很多種，而且公式有點難，放上來很多人就會暈過去，<br>所以呢，我們這邊先假設風險模型是一個function，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo>(</mo><mrow><mi mathvariant="bold">w</mi></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">h(\mathbf{w})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">h</span><span class="mopen">(</span><span class="mord textstyle uncramped"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mclose">)</span></span></span></span></p><p>我們的目標就是要找一個盡可能小的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo>(</mo><mrow><mi mathvariant="bold">w</mi></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">h(\mathbf{w})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">h</span><span class="mopen">(</span><span class="mord textstyle uncramped"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mclose">)</span></span></span></span></p><h3 id="同時比較報酬率跟風險"><a href="#同時比較報酬率跟風險" class="headerlink" title="同時比較報酬率跟風險"></a>同時比較報酬率跟風險</h3><p>所以我們希望報酬率不僅要好，並且風險也要很低才行，報酬率跟風險的圖可以畫成這樣：</p><center><img src="/股票投資組合系列（一）/returnrisk.gif" title="風險與報酬"></center><p>Y軸就是剛剛算的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mo>∗</mo></msup><mo>(</mo><mrow><mi mathvariant="bold">w</mi></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">r^*(\mathbf{w})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord">∗</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord textstyle uncramped"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mclose">)</span></span></span></span>，而X軸就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo>(</mo><mrow><mi mathvariant="bold">w</mi></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">h(\mathbf{w})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">h</span><span class="mopen">(</span><span class="mord textstyle uncramped"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mclose">)</span></span></span></span><br>我們可以把任意的投資商品畫在圖上，<br>例如：現金（cash）就是最沒有風險、但也最無法獲利的資產，所以位於圖中的左下角<br>或是：股票，風險較高，但潛在獲利也比較高，所以位於圖中右上角</p><p>我們要是可以找到一組在左上角的資產，該有多好？<br>代表此資產不但獲利高，且風險低，簡直是完美！<br>但可惜的是現實中，很難找到這種資產，怎麼辦？<br>我們自己來創造一個！我們將研發的策略當作是一種資產，並且放上這張圖中！<br>甚至，我們還可以利用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="bold">w</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.44444em;"></span><span class="strut bottom" style="height:0.44444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span></span></span></span>來組合不同的策略，產生靠近左上角的點！</p><h3 id="實做報酬率風險圖"><a href="#實做報酬率風險圖" class="headerlink" title="實做報酬率風險圖"></a>實做報酬率風險圖</h3><p>首先呢，先選取我覺得比較滿意的幾個策略出來：</p><center><img src="/股票投資組合系列（一）/eqs.png" title="策略報酬率"></center><p>策略的名字都被換成「口」，因為中文顯示不出來呀XDD<br>（這樣也好，因為看名字就能知道該策略的手法）<br>我把報酬率換成指數，方便觀看，你可能會覺得這策略也太猛，而且沒有開任何槓桿<br>但大部分的策略都是2017年寫出來的，所以也不用覺得這很神，<br>說不定都是一些過擬合的策略XD</p><p>接下來，我們利用蒙地卡羅法，跑五萬組隨機的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="bold">w</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.44444em;"></span><span class="strut bottom" style="height:0.44444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span></span></span></span>，<br>把每個組合產生的「報酬率」跟「風險」畫上來（只考慮2017年）：</p><center><img src="/股票投資組合系列（一）/final.png" title="報酬率 vs 風險"></center><p>這裡的Y軸對應到的就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mo>∗</mo></msup><mo>(</mo><mrow><mi mathvariant="bold">w</mi></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">r^*(\mathbf{w})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord">∗</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord textstyle uncramped"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mclose">)</span></span></span></span> ，也就是獲利<br>而X軸就是對應到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo>(</mo><mrow><mi mathvariant="bold">w</mi></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">h(\mathbf{w})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">h</span><span class="mopen">(</span><span class="mord textstyle uncramped"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mclose">)</span></span></span></span> ，也就是風險</p><p>彩色點點的部分，每一個點，是我們任意分配權重投資9個策略，產生的報酬率和風險<br>你就會發現，這些點只會出現在特定的範圍內，代表我們設定任何w，總會有碰到資產變化的極限，</p><p>另外，這些點點的顏色，代表了一種風險指標，同時結合了「報酬率」跟「風險」，名字叫做sharp ratio，<br>它的算法很簡單，就是直接 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mo>∗</mo></msup><mo>(</mo><mrow><mi mathvariant="bold">w</mi></mrow><mo>)</mo><mi mathvariant="normal">/</mi><mi>h</mi><mo>(</mo><mrow><mi mathvariant="bold">w</mi></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">r^*(\mathbf{w})/h(\mathbf{w})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord">∗</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord textstyle uncramped"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mclose">)</span><span class="mord mathrm">/</span><span class="mord mathit">h</span><span class="mopen">(</span><span class="mord textstyle uncramped"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mclose">)</span></span></span></span><br>由漸層的斜率可以看出來，sharp ratio 是一個可以幫我們找出「獲利大且風險小」的指標，<br>sharp ratio高的組合，對應到圖中，就是越綠的點（策略組合），剛好是在整張圖的左上方！</p><p>於是我們就可以找出兩個點（藍跟紅點），<br>其中一個是sharp最高的資產組合，另一個是風險最小的資產組合<br>這邊我們先不列出風險 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo>(</mo><mrow><mi mathvariant="bold">w</mi></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">h(\mathbf{w})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">h</span><span class="mopen">(</span><span class="mord textstyle uncramped"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mclose">)</span></span></span></span> 到底怎麼定義<br>只是給大家投資組合分析常用的一些套路，之後不外乎就是：</p><ul><li>修改報酬率模型 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mo>∗</mo></msup><mo>(</mo><mrow><mi mathvariant="bold">w</mi></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">r^*(\mathbf{w})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord">∗</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord textstyle uncramped"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mclose">)</span></span></span></span></li><li>修正風險值模型 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo>(</mo><mrow><mi mathvariant="bold">w</mi></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">h(\mathbf{w})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">h</span><span class="mopen">(</span><span class="mord textstyle uncramped"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mclose">)</span></span></span></span></li><li>導出一個更好的公式，可以不用蒙地卡羅，直接算出類似藍點或紅點，也就是最佳化的投資組合</li></ul><p>我們之後會更具體的來講解這些方法，並實做看看是否有用！（先講結論：有點用）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;這篇介紹多股票或是策略的配置方法，會以常見的方式加以說明，&lt;br&gt;並以用淺顯易懂的方式帶大家拆解複雜的公式，&lt;br&gt;期貨已經有很多人在用「多商品多策略」的方式在投資，&lt;br&gt;這邊的理論部分也是適用的，歡迎進來看看。&lt;/p&gt;
&lt;p&gt;股票策略是比較難量化的，&lt;br&gt;因為股票要同
      
    
    </summary>
    
    
      <category term="量化投資" scheme="https://www.finlab.tw/tags/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B3%87/"/>
    
  </entry>
  
  <entry>
    <title>Python簡單自動下單</title>
    <link href="https://www.finlab.tw/%E9%80%9A%E7%94%A8%E8%87%AA%E5%8B%95%E4%B8%8B%E5%96%AE%E6%B3%95%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
    <id>https://www.finlab.tw/通用自動下單法（下）/</id>
    <published>2018-04-13T07:10:52.000Z</published>
    <updated>2018-04-16T22:29:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>哈囉～好久不見！這篇文章分享如何用python自動下單！<br>只要用這種方式，不管您是用哪一個券商，相信都能自動下單的！<br>本文章使用新光證券為範例，其它券商就麻煩大家囉！</p><center><img src="/通用自動下單法（下）/thumbnail.png" title="自動下單"></center><h3 id="不負責聲明"><a href="#不負責聲明" class="headerlink" title="不負責聲明"></a>不負責聲明</h3><p>本程式僅供教學用，有幾點必須要注意：</p><ul><li>萬一新光證券改版，程式會無法使用喔！</li><li>不要在開盤的時候測試，不然就會直接買賣了喔0.0</li><li>在關市時實驗，記得要刪掉委託單喔！</li><li>不要在開盤的時候測試</li><li>不要在開盤的時候測試</li><li>不要在開盤的時候測試(很重要！多加幾行XD)</li></ul><h3 id="使用Selenium"><a href="#使用Selenium" class="headerlink" title="使用Selenium"></a>使用Selenium</h3><p>這是一個網頁自動化工具，通常是拿來測試網頁用，但是拿來下單也可以！<br>我們用它是因為它支援javascript，實做起來就像是按鍵精靈一樣，比較簡單一點！</p><p>安裝方法請參考<a href="http://selenium-python.readthedocs.io/installation.html#downloading-python-bindings-for-selenium" rel="external nofollow noopener noreferrer" target="_blank">Selenium</a></p><p>除了<code>pip install selenium</code>以外，還必須要下載driver才行喔！<br>driver 就是一個控制瀏覽器的接口，可以挑chrome、firefox等來用。</p><h3 id="自動登入"><a href="#自動登入" class="headerlink" title="自動登入"></a>自動登入</h3><p>安裝好了之後，我們先來分析下新光金控的下單流程：</p><ol><li>連結到<a href="https://w.sk88.com.tw/Cross/Pc/Login.aspx" rel="external nofollow noopener noreferrer" target="_blank">新光證券富貴角</a></li><li>輸入帳密</li><li>按「登入」</li></ol><p>人工執行很簡單，但是要python執行怎麼寫呢？</p><p>首先，雖然人眼看到的是網頁，但程式看到的，都是代碼，<br>所以輸入帳密時，我們必須找出代碼中，對應到帳密的欄位進行填寫，<br>可以對著欄位按右鍵，查找該欄位的ID</p><center><img src="/通用自動下單法（下）/login.png" title="無有效憑證"></center><p>於是我們就有了第一段程式碼（可以從第30行開始看就好了）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. webdriver: 就是瀏覽器的介面，可以操控瀏覽器</span></span><br><span class="line"><span class="comment"># 2. EC、WebDriverWait：我們可以用WebDriverWait等待EC的條件成立，才執行某些動作</span></span><br><span class="line"><span class="comment"># 3. By：寫條件的時候，用By來獲取網頁上的元素</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用來填寫表單的function</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text_input</span><span class="params">(driver, idname, text)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 確認欄位id存在</span></span><br><span class="line">    field = WebDriverWait(driver, <span class="number">10</span>).until(</span><br><span class="line">        EC.presence_of_element_located((By.ID, idname))</span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># 清空並填入欄位</span></span><br><span class="line">    field.clear()</span><br><span class="line">    field.send_keys(text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等 idname 按鈕出現時，按一下</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wait_then_click</span><span class="params">(driver, idname)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 確定按鈕存在</span></span><br><span class="line">    element = WebDriverWait(driver, <span class="number">10</span>).until(</span><br><span class="line">        EC.presence_of_element_located((By.ID, idname))</span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># 按一下</span></span><br><span class="line">    element.click()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打開瀏覽器，並到登入的網址</span></span><br><span class="line">driver = webdriver.Firefox(executable_path=<span class="string">'你的driver的位置'</span>)</span><br><span class="line">driver.get(<span class="string">'https://w.sk88.com.tw/Cross/Pc/Login.aspx'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 填入帳號密碼，按確認</span></span><br><span class="line">text_input(driver, <span class="string">'TxtIDNo'</span>, <span class="string">'你的帳號'</span>)</span><br><span class="line">text_input(driver, <span class="string">'TxtPass'</span>, <span class="string">'你的密碼'</span>)</span><br><span class="line">wait_then_click(driver, <span class="string">'Button1'</span>)</span><br></pre></td></tr></table></figure><p>第30行才開始執行按鍵精靈的功能，假如前面看不懂就省略吧XD<br>以上代碼和解釋就請大家自行讀取囉！</p><h3 id="但事情沒那麼簡單…"><a href="#但事情沒那麼簡單…" class="headerlink" title="但事情沒那麼簡單…"></a>但事情沒那麼簡單…</h3><p>登入後就看到一行：本機無有效憑證，故無法網路下單，僅提供看盤資訊。</p><center><img src="/通用自動下單法（下）/certificate.png" title="無有效憑證"></center><p>但我們就是想要網路下單呀！所以，只能來個自動匯入憑證了！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按一下確定</span></span><br><span class="line">wait_then_click(driver, <span class="string">'Button1'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 匯入憑證（windows裡面的路徑要改成反斜線喔！「C:\hello\something\SKIS_xxx.pfx」之類的）</span></span><br><span class="line">driver.find_element_by_id(<span class="string">"FileUploadCert"</span>).send_keys(<span class="string">'/Users/放哪都可以/Documents/SKIS_xxx.pfx'</span>)</span><br><span class="line">text_input(driver, <span class="string">'TxtCertPass'</span>, <span class="string">'你的密碼'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按「確認」</span></span><br><span class="line">wait_then_click(driver, <span class="string">'BtnImport'</span>)</span><br><span class="line">wait_then_click(driver, <span class="string">"jqismooth_state0_button確　 認"</span>)</span><br></pre></td></tr></table></figure><p>接下來我們又跳回到登入頁面了，所以再登入一次就可以下單囉！<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line">text_input(driver, <span class="string">'TxtPass'</span>, <span class="string">'你的帳號'</span>)</span><br><span class="line">text_input(driver, <span class="string">'TxtIDNo'</span>, <span class="string">'你的密碼'</span>)</span><br><span class="line">wait_then_click(driver, <span class="string">'Button1'</span>)</span><br></pre></td></tr></table></figure></p><p>為什麼這邊要用<code>time.sleep</code>呢？<br>我也很想避免，但可能是page loading完，有一些javascript要驗證，<br>所以不能太快填寫表單，不然會被清除，加了sleep等待javascript驗證完畢，才能使用，<br>經過了百般折騰，我們終於可以正式的來下單了！</p><h3 id="下漲停單"><a href="#下漲停單" class="headerlink" title="下漲停單"></a>下漲停單</h3><p>接下來就來示範漲停單，首先這個頁面，是非常可怕的連環<a href="http://www.w3school.com.cn/html/html_iframe.asp" rel="external nofollow noopener noreferrer" target="_blank">iframe</a>所包成的<br>什麼是iframe呢？白話來說就是網頁中的網頁，的意思…<br>所以這個下單介面，就是網頁包網頁包網頁，如下圖：</p><center><img src="/通用自動下單法（下）/iframe.png" title="網頁包網頁包網頁"></center><p>我們必須再深入兩層iframe，才能到達下單的真正網頁：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">driver.switch_to_default_content()</span><br><span class="line"></span><br><span class="line">WebDriverWait(driver, <span class="number">10</span>).until(EC.presence_of_element_located((By.NAME, <span class="string">"Content"</span>)))</span><br><span class="line">driver.switch_to.frame(<span class="string">'Content'</span>)</span><br><span class="line"></span><br><span class="line">WebDriverWait(driver, <span class="number">10</span>).until(EC.presence_of_element_located((By.ID, <span class="string">"OrderPanel"</span>)))</span><br><span class="line">driver.switch_to.frame(<span class="string">'OrderPanel'</span>)</span><br></pre></td></tr></table></figure></p><p>接下來就可以利用這個iframe下單了，總共有七個步驟，以漲停買入為例，如下圖：</p><center><img src="/通用自動下單法（下）/order.png" title="下單七步驟"></center><p>這邊要注意第三跟五的步驟，我們要等待特定的事件發生，才能繼續進行喔！<br>因為這關係到網頁與新光證券的伺服器中間的認證，沒有等待就下不了單喔！</p><p>接下來就把這七個步驟寫成代碼：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">stock_id = <span class="string">'2330'</span></span><br><span class="line">bs = <span class="string">'buy'</span></span><br><span class="line">amount = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第一步驟</span></span><br><span class="line">text_input(driver, <span class="string">'TxtSymb'</span>, stock_id)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二步驟</span></span><br><span class="line">btnbs_xpath = <span class="string">"//span[@id='RdoOrls']/label/span"</span> <span class="keyword">if</span> bs == <span class="string">'buy'</span> <span class="keyword">else</span> <span class="string">"//span[@id='RdoOrls']/label[2]/span"</span></span><br><span class="line">driver.find_element_by_xpath(btnbs_xpath).click()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三步驟</span></span><br><span class="line"><span class="keyword">if</span> bs == <span class="string">'buy'</span>:</span><br><span class="line">    WebDriverWait(driver, <span class="number">10</span>).until(EC.presence_of_element_located((By.XPATH, <span class="string">"//body[@style='background: rgb(255, 192, 203) none repeat scroll 0% 0%;']"</span>)))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    WebDriverWait(driver, <span class="number">10</span>).until(EC.presence_of_element_located((By.XPATH, <span class="string">"//body[@style='background: rgb(167, 217, 254) none repeat scroll 0% 0%;']"</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第四步驟</span></span><br><span class="line">btnlimit_xpath = <span class="string">"//span[@id='RdoOrpt']/label[2]/span"</span> <span class="keyword">if</span> bs == <span class="string">'buy'</span> <span class="keyword">else</span> <span class="string">"//span[@id='RdoOrpt']/label[4]/span"</span></span><br><span class="line">driver.find_element_by_xpath(btnlimit_xpath).click()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第五步驟</span></span><br><span class="line"><span class="keyword">if</span> bs == <span class="string">'buy'</span>:</span><br><span class="line">    WebDriverWait(driver, <span class="number">10</span>).until(EC.presence_of_element_located((By.XPATH, <span class="string">'//input[@id = "TxtOrpr" and @value = "漲停價"]'</span>)))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    WebDriverWait(driver, <span class="number">10</span>).until(EC.presence_of_element_located((By.XPATH, <span class="string">'//input[@id = "TxtOrpr" and @value = "跌停價"]'</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第六步驟</span></span><br><span class="line">text_input(driver, <span class="string">'TxtOrsh'</span>, str(amount))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第七步驟</span></span><br><span class="line">driver.execute_script(<span class="string">'QueryConfirm()'</span>)</span><br><span class="line">wait_then_click(driver, <span class="string">'jqismooth_state0_button確　 認'</span>)</span><br><span class="line">wait_then_click(driver, <span class="string">'jqismooth_state0_button離　 開'</span>)</span><br></pre></td></tr></table></figure><p>這邊我有用一些xpath的方式，來查找一些按鈕，可以參考<a href="https://zh.wikibooks.org/zh-hant/XML/XPath" rel="external nofollow noopener noreferrer" target="_blank">xpath教學</a><br>假如已經事先登入，執行這7個步驟，大約落在3秒左右，應該還算是堪用，<br>但以上範例都是用漲停或是跌停買賣，而且我真的沒有在盤中使用過，還請小心服用！</p><p>以上就是盤中買賣<strong>不負責</strong>教學！不知道大家有什麼建議呢？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;哈囉～好久不見！這篇文章分享如何用python自動下單！&lt;br&gt;只要用這種方式，不管您是用哪一個券商，相信都能自動下單的！&lt;br&gt;本文章使用新光證券為範例，其它券商就麻煩大家囉！&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;/通用自動下單法（下）/thumbnail.png
      
    
    </summary>
    
      <category term="財經Python教學" scheme="https://www.finlab.tw/categories/%E8%B2%A1%E7%B6%93Python%E6%95%99%E5%AD%B8/"/>
    
    
      <category term="python" scheme="https://www.finlab.tw/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>ROE到底高或低才好？</title>
    <link href="https://www.finlab.tw/ROE%E5%88%B0%E5%BA%95%E9%AB%98%E6%88%96%E4%BD%8E%E6%89%8D%E5%A5%BD%EF%BC%9F/"/>
    <id>https://www.finlab.tw/ROE到底高或低才好？/</id>
    <published>2018-03-18T13:15:20.000Z</published>
    <updated>2018-03-19T11:41:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>我曾經在<a href="/EPS跟ROE哪個比較好用？">EPS跟ROE的比較文章</a>中，說明了「ROE越高越好」，但後來隔了幾個月，財報狗發佈了一篇文章「<a href="http://statementdog.com/blog/archives/10552" rel="external nofollow noopener noreferrer" target="_blank">為什麼ROE 不是越高越好？</a>」，瞬間被打臉，雙方都有回測做依據，究竟誰的回測系統有問題，我們來看個究竟！</p><center><img src="/ROE到底高或低才好？/thumbnail.png" title="搞的我好亂呀！XD"></center><h3 id="FinLab說：為何ROE越高越好？"><a href="#FinLab說：為何ROE越高越好？" class="headerlink" title="FinLab說：為何ROE越高越好？"></a>FinLab說：為何ROE越高越好？</h3><p>ROE就是一個考慮了公司可用資金與報酬的指標：</p><p>股東權益 = 總資產 - 總負債<br>ROE = 稅後盈餘 / 股東權益 * 100%</p><p>所以從公式上，我們應該要選擇稅後盈餘高，且股東權益低的公司，<br>代表公司很會賺錢！</p><p>簡單的策略：</p><ul><li>每60天（約兩個月）換一次ROE大於10％的股票（ROE高的股票）</li><li>結果：ROE高比ROE較低的股票群，來的更有優勢！</li></ul><h3 id="財報狗說：為何ROE越高不會越好，甚至越低越好？"><a href="#財報狗說：為何ROE越高不會越好，甚至越低越好？" class="headerlink" title="財報狗說：為何ROE越高不會越好，甚至越低越好？"></a>財報狗說：為何ROE越高不會越好，甚至越低越好？</h3><p>因為從統計來說，企業無法維持高ROE是常態，<br>通常擁有較高ROE的產業，必定伴隨很多競爭者、效訪者，所以到至於利潤下滑，<br>產業之間的競爭是非常激烈的喔！<br>而且當企業競爭優勢不再，ROE開始下滑時，股價也會反映出來！</p><p>簡單的策略：</p><ul><li>每年換一次ROE高股票</li><li>結果：ROE高效果甚至比ROE低的股票，績效更差！</li></ul><h3 id="所以到底誰說的對？"><a href="#所以到底誰說的對？" class="headerlink" title="所以到底誰說的對？"></a>所以到底誰說的對？</h3><p>這兩套立場各說各話時，背後其實是想要說明一個數據的特性，<br>就像是ROE跟股價之間的變化，</p><p>同樣的故事，不同的解讀方式，造成投資變得非常的撲朔迷離！</p><p>撲朔迷離的問題，資料的分析才是解決之道，就我個人的感覺，<br>應該是資料為本，而說詞當輔助，幫助記憶，<br>我覺得很多投資課程，都太強調說詞的傳授，反而沒有全面的真實資料的佐證！</p><h3 id="所以FinLab跟財報狗誰的故事是對的？"><a href="#所以FinLab跟財報狗誰的故事是對的？" class="headerlink" title="所以FinLab跟財報狗誰的故事是對的？"></a>所以FinLab跟財報狗誰的故事是對的？</h3><p>兩個都對，或者，嚴格說兩個都錯了！<br>就算有數據佐證，故事沒說清楚，也會導致大家理解上有很多誤區</p><p>剛剛仔細看文章的讀者，應該會發現，我們在回測時，更換持股的頻率不同！<br>沒錯，就是因為換股的頻率不同，所以導致績效有非常大的差距！</p><ul><li>高ROE的公司股價上升，是正確的！</li><li>ROE無法維持高檔，會有回歸的趨勢，造成股價又下跌，也是正確的！</li></ul><p>所以接下來我們就來觀看不同頻率持有高ROE的公司，會得到怎麼樣的報酬率：</p><ul><li>當ROE大於10％則持有 n 天，每 n 天換一次股票</li><li>不考慮手續費</li></ul><center><img src="/ROE到底高或低才好？/eq.png" title="歷史績效圖"></center><p>可以發現，換股頻率高的時候，獲利情況也會跟著變好，基本上也是一字排開的狀況！<br>財報狗只看到了金黃色那條曲線圖，所以他們說ROE高獲利不高<br>而FinLab只看到了深咖啡色的曲線圖，所以說ROE高獲利也高</p><h3 id="正解："><a href="#正解：" class="headerlink" title="正解："></a>正解：</h3><p>ROE在高檔時，可以買進，但是最好要密切觀察，當ROE下跌時，盡早賣出！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我曾經在&lt;a href=&quot;/EPS跟ROE哪個比較好用？&quot;&gt;EPS跟ROE的比較文章&lt;/a&gt;中，說明了「ROE越高越好」，但後來隔了幾個月，財報狗發佈了一篇文章「&lt;a href=&quot;http://statementdog.com/blog/archives/10552&quot; re
      
    
    </summary>
    
      <category term="指標分析" scheme="https://www.finlab.tw/categories/%E6%8C%87%E6%A8%99%E5%88%86%E6%9E%90/"/>
    
      <category term="基本面" scheme="https://www.finlab.tw/categories/%E6%8C%87%E6%A8%99%E5%88%86%E6%9E%90/%E5%9F%BA%E6%9C%AC%E9%9D%A2/"/>
    
    
      <category term="ROE" scheme="https://www.finlab.tw/tags/ROE/"/>
    
      <category term="如何買股票" scheme="https://www.finlab.tw/tags/%E5%A6%82%E4%BD%95%E8%B2%B7%E8%82%A1%E7%A5%A8/"/>
    
  </entry>
  
  <entry>
    <title>創新高有多高？</title>
    <link href="https://www.finlab.tw/%E5%89%B5%E6%96%B0%E9%AB%98%E6%9C%89%E5%A4%9A%E9%AB%98%EF%BC%9F/"/>
    <id>https://www.finlab.tw/創新高有多高？/</id>
    <published>2018-02-27T20:10:59.000Z</published>
    <updated>2018-11-29T17:09:41.907Z</updated>
    
    <content type="html"><![CDATA[<p>創多少天新高，才叫創新高？今天用非常紮實的回測，來分析一下多少天創新高，才是真正的創新高。<br>看到很多名師選股，都是用創新高的思路，然而買在創新高就是會讓人怕怕的，這麼高了！真的可以買嗎？尤其是對於價值型投資者來說，看到創新高的股票，有些本益比都快噴發60倍，避之唯恐不及，怎麼可能還買呢！？</p><center><img src="/創新高有多高？/thumbnail.png" title="創新高真的不危險嗎？"></center><p>今天分享給大家，創新高真的沒問題嗎？<br>越創越高難道真的越好？（真的越好）<br>究竟為何會發生這種現象？</p><p>股價突破某個歷史高點，事出必有因，<br>以下歸納一下原因：</p><ul><li>題材股：豬，站在風頭也會飛，可能是最近一波題材股的關係！</li><li>獲利股：財務結構重大改變，獲利暴增。</li><li>利多股：未來獲利預估會暴增的股票。</li></ul><p>當然還可能有更多原因，就請大大們補充了！<br>總之股價突破了某個歷史高點，接下來必定就是兩條路：</p><ul><li>沾了一下高點，又跌了回去</li><li>繼續噴高，一去不復返</li></ul><p>究竟怎麼分別這兩種股票呢？我發現，創新高，多久的新高非常關鍵！<br>所以我做了以下的回測分析：</p><ul><li>當股價創 n 天新高時，分配金額，隔天開盤買入</li><li>持有20天後賣出</li></ul><p>不算手續費，會有以下的結果：</p><center><img src="/創新高有多高？/eq.png" title="n天創新高時買入20天"></center><p>超級漂亮的一字排開！而最紅的曲線，就是600天創新高才買入，而最黑的那條線，則是60天創新高就買入了！<br>事實證明，創新高真的有用！而且創新高天數（n）設定越高，創新高就越有用。</p><p>然而這個沒有考慮手續費喔！考慮100萬起始資金，手續費(6折)，和證交稅的話，獲利會降低，<br>600天創新高的績效變成2.75倍，比照同期大盤1.2倍，加權報酬1.59倍。</p><p>接下來來分析一下，不考慮手續費：</p><h3 id="勝率分析"><a href="#勝率分析" class="headerlink" title="勝率分析"></a>勝率分析</h3><p>接下來我們再來分析一下勝率：<br>下圖中的 x 軸是不同的策略，採取x天創新高，<br>y軸則是該交易的勝率（就是一支股票獲利的機率）：</p><center><img src="/創新高有多高？/prob.png" title="n天創新高 vs 勝率"></center><p>大部分都落在46到47％左右，<br>然而這是沒有加上手續費的，假如加上手續費，勝率更低…。<br>只能說創新高勝率不高…，會讓你心情不太好，<br>而且常常集體一起爛掉（個人使用的感覺），<br>尤其是大盤有點漲不上去的時候，（如最近XDD）。</p><p>但是整體來講還是會獲利喔！就像是一百次小輸，但贏的那次大贏。<br>所以接下來我們就來研究選到飆股的機率吧！</p><h3 id="選到飆股機率"><a href="#選到飆股機率" class="headerlink" title="選到飆股機率"></a>選到飆股機率</h3><p>但偶爾會有飆股！讓我們來分析一下買到飆股的機率，我們先定義飆股為漲40％以上<br>來看看所有的買賣當中，飆股比例是否跟 n 天創新高有關：</p><center><img src="/創新高有多高？/good_stock.png" title="n天創新高 vs 勝率"></center><p>y軸為買到飆股的機率，大約是1％左右，平均就是100檔裡面有一檔飆股啦XDD。<br>但飆股與n天創新高有明顯的關連，可見，n 越大，越有可能買到飆股，這真是一個好現象呀！</p><h3 id="平均獲利比較"><a href="#平均獲利比較" class="headerlink" title="平均獲利比較"></a>平均獲利比較</h3><p>所以就選擇那些越久創新高的，會比較好囉？<br>先別急，不能只看大飆股，應該要考慮每檔股票買賣的平均獲利比較準！<br>所以我們也分析了一下：</p><center><img src="/創新高有多高？/mean.png" title="n天創新高 vs 平均獲利"></center><p>上圖的y軸，大於1代表獲利，小於1代表虧損，每支股票平均的獲利可以在1％左右，<br>算上摩擦成本（0.7%），就看起來沒這麼多了對吧XD。</p><p>發現，以平均來說，雖然似乎n有越大越好的趨勢，但是120日創新高也不能忽略，<br>我的感覺是，很多人都用120創新高這個參數在買股票，<br>所以很多圖都在120日有奇怪的反應（勝率跟獲利，都異常的高，詳見上圖）。</p><p>所以這篇文章對創新高的天數做了分析，也讓大家有一個策略的原型，<br>可以將此策略再多觀察、多分析，結合不同指標，相信可以篩選出更好的買點賣點！</p><p>不好意思讓大家久等了，最近一直在忙課程的東西，我覺得對長期支持blog的大家覺得虧欠。<br>我的理想目標是blog的發文頻率不要因為課程拍攝影片而被影響！<br>然而，事情畢竟沒有這麼簡單，<br>目前呈現蠟燭幾頭燒的狀態。<br>但我會盡力的！<br>也謝謝各位的長期支持！<br>我們會秉持初衷，維持文章的品質！讓FinLab的理念可以被更多人看到～</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;創多少天新高，才叫創新高？今天用非常紮實的回測，來分析一下多少天創新高，才是真正的創新高。&lt;br&gt;看到很多名師選股，都是用創新高的思路，然而買在創新高就是會讓人怕怕的，這麼高了！真的可以買嗎？尤其是對於價值型投資者來說，看到創新高的股票，有些本益比都快噴發60倍，避之唯恐不
      
    
    </summary>
    
      <category term="指標分析" scheme="https://www.finlab.tw/categories/%E6%8C%87%E6%A8%99%E5%88%86%E6%9E%90/"/>
    
      <category term="技術面" scheme="https://www.finlab.tw/categories/%E6%8C%87%E6%A8%99%E5%88%86%E6%9E%90/%E6%8A%80%E8%A1%93%E9%9D%A2/"/>
    
    
      <category term="如何買股票" scheme="https://www.finlab.tw/tags/%E5%A6%82%E4%BD%95%E8%B2%B7%E8%82%A1%E7%A5%A8/"/>
    
      <category term="歷史回測" scheme="https://www.finlab.tw/tags/%E6%AD%B7%E5%8F%B2%E5%9B%9E%E6%B8%AC/"/>
    
      <category term="選股" scheme="https://www.finlab.tw/tags/%E9%81%B8%E8%82%A1/"/>
    
      <category term="程式交易" scheme="https://www.finlab.tw/tags/%E7%A8%8B%E5%BC%8F%E4%BA%A4%E6%98%93/"/>
    
      <category term="型態學" scheme="https://www.finlab.tw/tags/%E5%9E%8B%E6%85%8B%E5%AD%B8/"/>
    
      <category term=" 量化投資" scheme="https://www.finlab.tw/tags/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B3%87/"/>
    
      <category term="指標" scheme="https://www.finlab.tw/tags/%E6%8C%87%E6%A8%99/"/>
    
  </entry>
  
  <entry>
    <title>我的量化投資史</title>
    <link href="https://www.finlab.tw/%E6%88%91%E7%9A%84%E9%87%8F%E5%8C%96%E6%8A%95%E8%B3%87%E9%BB%91%E6%AD%B7%E5%8F%B2/"/>
    <id>https://www.finlab.tw/我的量化投資黑歷史/</id>
    <published>2018-02-15T12:12:15.000Z</published>
    <updated>2018-02-22T11:24:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>我以前很喜歡寫程式，<br>剛開始接觸投資時，就希望能夠用程式超越99%的投資人<br>我以為程式交易是好棒棒，<br>有了這個絕密的武器，在投資市場上就能夠輕而一舉超越絕大部分投資者。<br>現在真的覺得自己好傻好天真呀！</p><center><img src="/我的量化投資黑歷史/thumbnail.jpeg" title="翻開黑歷史"></center><h3 id="我錯了，量化投資不是聖杯"><a href="#我錯了，量化投資不是聖杯" class="headerlink" title="我錯了，量化投資不是聖杯"></a>我錯了，量化投資不是聖杯</h3><p>後來不斷的研究發現，量化投資也是有其極限<br>歷史年化報酬率最高也就10～20％，上線後還不保證可以跟歷史績效一樣<br>這個時候才瞭解，操盤手每天看線，不是看假的，投資還是得花很多時間磨練。</p><h3 id="於是，我開始主觀交易，但後果是？"><a href="#於是，我開始主觀交易，但後果是？" class="headerlink" title="於是，我開始主觀交易，但後果是？"></a>於是，我開始主觀交易，但後果是？</h3><p>想建構一個超強的回測平台，真的不容易。<br>還沒建好前，我手已經很癢，就開始投資了，<br>那個時候我真的很蠢，直接上網搜尋，大家最近講哪些股票、看看KD值，就直接買了！？</p><p>可想而知，結果就是慘賠（幾千塊XD我很膽小），<br>但心情很差！尤其是每天要顧著那些股票，<br>不知道它明天又要如何震盪，心情隨之擺盪。</p><p>於是，我又參考了一個很有名的老師，<br>照著它的明牌買，發現怎麼買怎麼跌，心情更差！<br>總覺得股市茫茫無所適從，</p><p>突然發現，我這不是在”投資”，而是在”賭”！</p><h3 id="有了好策略，還是高買低賣"><a href="#有了好策略，還是高買低賣" class="headerlink" title="有了好策略，還是高買低賣"></a>有了好策略，還是高買低賣</h3><p>我的回測平台終於建好了，開始找好的策略，也有幾個不錯的選股方法，<br>用股市大富翁模擬，跑得好棒棒，於是決定將策略上線，<br>上線後覺得好奇怪，怎麼開始策略不管用了？連續兩個月都在震盪，</p><p>當時又是暑假，我就丟棄此策略，跑去到處玩。</p><p>九月開學，回頭才發現自己的策略漲了20%<br>我竟然都沒有跟到，於是投入真錢，又開始賠…。</p><p>原來這就是傳說中，有了策略還是高買低賣呀XD。</p><h3 id="終於，下定決心每天投資"><a href="#終於，下定決心每天投資" class="headerlink" title="終於，下定決心每天投資"></a>終於，下定決心每天投資</h3><p>開始使用策略，策略會跑出來的股票清單，<br>但我還是不相信它，喜歡自己研究半天，少買幾檔，</p><p>後來發現沒買的都漲，買的都跌，<br>跑出來跟策略的報酬率不太一樣，我的實際報酬率輸策略的報酬率…</p><h3 id="於是，下定決心按表操課？"><a href="#於是，下定決心按表操課？" class="headerlink" title="於是，下定決心按表操課？"></a>於是，下定決心按表操課？</h3><p>沒有，最後我還是沒按表操課，因為我慢慢的跟策略產生了一些默契，<br>現在我每天只看10分鐘，搭配一些額外的籌碼面（券商分點），<br>我發現主觀甚至可以稍微優化策略，當然沒有歷史績效輔助，說不定我只是最近運氣好罷了。</p><p>當初我就是沒有個方向，才學習的如此緩慢，所以撰寫<a href="/股票入門懶人包/">新手選股SOP懶人包</a><br>雖然不一定是最好，但假如你是剛開始接觸股票的話，應該可以避免你走一些冤枉路。</p><h3 id="人與量化條件搭配，相輔相成"><a href="#人與量化條件搭配，相輔相成" class="headerlink" title="人與量化條件搭配，相輔相成"></a>人與量化條件搭配，相輔相成</h3><p>從最初，策略帶我找標的，<br>最後，我用更多數據來篩選策略給我的股票，</p><p>學習選股的路上，像是互相提拔的感覺。<br>人與量化策略一起買賣股票，目前看來是可行的，<br>缺點就是要額外的時間，考慮額外的因素來買賣，<br>而且遇到策略不靈光時，有交易手法變形的可能。</p><p>平常不太會去更動策略的選股，<br>但最近躲過全球慘跌是我自己主觀判斷，</p><p>大家在交易的時候，應該也有量化（機械式的篩選）和主觀（自己查個股資料判斷）的部分，<br>很好奇大家在這兩個部分各佔了多少呢？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我以前很喜歡寫程式，&lt;br&gt;剛開始接觸投資時，就希望能夠用程式超越99%的投資人&lt;br&gt;我以為程式交易是好棒棒，&lt;br&gt;有了這個絕密的武器，在投資市場上就能夠輕而一舉超越絕大部分投資者。&lt;br&gt;現在真的覺得自己好傻好天真呀！&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;/我
      
    
    </summary>
    
    
      <category term="投資" scheme="https://www.finlab.tw/tags/%E6%8A%95%E8%B3%87/"/>
    
      <category term="股票" scheme="https://www.finlab.tw/tags/%E8%82%A1%E7%A5%A8/"/>
    
  </entry>
  
</feed>
